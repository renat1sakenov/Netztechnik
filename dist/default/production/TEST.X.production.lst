

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Oct 24 09:46:17 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29  0000                     
    30                           ; Version 1.44
    31                           ; Generated 14/09/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4520 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	smallconst
    66  000600                     __psmallconst:
    67                           	opt stack 0
    68  000600  00                 	db	0
    69  000601                     _dpowers:
    70                           	opt stack 0
    71  000601  0001               	dw	1
    72  000603  000A               	dw	10
    73  000605  0064               	dw	100
    74  000607  03E8               	dw	1000
    75  000609  2710               	dw	10000
    76  00060B                     __end_of_dpowers:
    77                           	opt stack 0
    78  0000                     _SSPCON1bits	set	4038
    79  0000                     _TRISCbits	set	3988
    80  0000                     _SSPSTAT	set	4039
    81  0000                     _SSPCON2	set	4037
    82  0000                     _SSPBUF	set	4041
    83  0000                     _PIR2bits	set	4001
    84  0000                     _SSPSTATbits	set	4039
    85  0000                     _SSPCON1	set	4038
    86  0000                     _SSPCON2bits	set	4037
    87  0000                     _ADRESL	set	4035
    88  0000                     _ADRESH	set	4036
    89  0000                     _INTCONbits	set	4082
    90  0000                     _PIR1bits	set	3998
    91  0000                     _ADCON1	set	4033
    92  0000                     _ADCON2	set	4032
    93  0000                     _ADCON0	set	4034
    94  0000                     _PIE1bits	set	3997
    95  0000                     _ADCON0bits	set	4034
    96  0000                     _TRISB	set	3987
    97  0000                     _TRISAbits	set	3986
    98  0000                     _LATB	set	3978
    99  0000                     _LATA	set	3977
   100  0000                     _PORTB	set	3969
   101  0000                     _LATAbits	set	3977
   102  00060B                     STR_2:
   103  00060B  54                 	db	84	;'T'
   104  00060C  65                 	db	101	;'e'
   105  00060D  73                 	db	115	;'s'
   106  00060E  74                 	db	116	;'t'
   107  00060F  00                 	db	0
   108  000610                     STR_1:
   109  000610  25                 	db	37
   110  000611  64                 	db	100	;'d'
   111  000612  00                 	db	0
   112                           
   113                           ; #config settings
   114  000613  00                 	db	0	; dummy byte at the end
   115  0000                     
   116                           	psect	cinit
   117  000B82                     __pcinit:
   118                           	opt stack 0
   119  000B82                     start_initialization:
   120                           	opt stack 0
   121  000B82                     __initialization:
   122                           	opt stack 0
   123  000B82                     end_of_initialization:
   124                           	opt stack 0
   125  000B82                     __end_of__initialization:
   126                           	opt stack 0
   127  000B82  0E00               	movlw	low (__Lmediumconst shr (0+16))
   128  000B84  6EF8               	movwf	tblptru,c
   129  000B86  0100               	movlb	0
   130  000B88  EFAE  F003         	goto	_main	;jump to C main() function
   131                           tblptru	equ	0xFF8
   132                           
   133                           	psect	cstackCOMRAM
   134  000001                     __pcstackCOMRAM:
   135                           	opt stack 0
   136  000001                     ??_Delay10KTCYx:
   137  000001                     ??_SetDDRamAddr:
   138  000001                     ??_DelayPORXLCD:
   139  000001                     ?_ReadADC:
   140                           	opt stack 0
   141  000001                     ?___lwdiv:
   142                           	opt stack 0
   143  000001                     WriteCmdXLCD@cmd:
   144                           	opt stack 0
   145  000001                     WriteDataXLCD@data:
   146                           	opt stack 0
   147  000001                     OpenADC@config2:
   148                           	opt stack 0
   149  000001                     ___lwdiv@dividend:
   150                           	opt stack 0
   151                           
   152                           ; 2 bytes @ 0x0
   153  000001                     	ds	1
   154  000002                     OpenADC@portconfig:
   155                           	opt stack 0
   156  000002                     Delay10KTCYx@unit:
   157                           	opt stack 0
   158  000002                     putsXLCD@buffer:
   159                           	opt stack 0
   160                           
   161                           ; 2 bytes @ 0x1
   162  000002                     	ds	1
   163  000003                     ??_OpenADC:
   164  000003                     ??_ReadADC:
   165  000003                     ___lwdiv@divisor:
   166                           	opt stack 0
   167                           
   168                           ; 2 bytes @ 0x2
   169  000003                     	ds	1
   170  000004                     SetDDRamAddr@DDaddr:
   171                           	opt stack 0
   172                           
   173                           ; 1 bytes @ 0x3
   174  000004                     	ds	1
   175  000005                     OpenXLCD@lcdtype:
   176                           	opt stack 0
   177  000005                     OpenADC@config:
   178                           	opt stack 0
   179  000005                     ___lwdiv@quotient:
   180                           	opt stack 0
   181                           
   182                           ; 2 bytes @ 0x4
   183  000005                     	ds	1
   184  000006                     
   185                           ; 1 bytes @ 0x5
   186  000006                     	ds	1
   187  000007                     ___lwdiv@counter:
   188                           	opt stack 0
   189                           
   190                           ; 1 bytes @ 0x6
   191  000007                     	ds	1
   192  000008                     ?___lwmod:
   193                           	opt stack 0
   194  000008                     ___lwmod@dividend:
   195                           	opt stack 0
   196                           
   197                           ; 2 bytes @ 0x7
   198  000008                     	ds	2
   199  00000A                     ___lwmod@divisor:
   200                           	opt stack 0
   201                           
   202                           ; 2 bytes @ 0x9
   203  00000A                     	ds	2
   204  00000C                     ___lwmod@counter:
   205                           	opt stack 0
   206                           
   207                           ; 1 bytes @ 0xB
   208  00000C                     	ds	1
   209  00000D                     ?_sprintf:
   210                           	opt stack 0
   211  00000D                     sprintf@sp:
   212                           	opt stack 0
   213                           
   214                           ; 2 bytes @ 0xC
   215  00000D                     	ds	2
   216  00000F                     sprintf@f:
   217                           	opt stack 0
   218                           
   219                           ; 2 bytes @ 0xE
   220  00000F                     	ds	4
   221  000013                     ??_sprintf:
   222                           
   223                           ; 1 bytes @ 0x12
   224  000013                     	ds	1
   225  000014                     sprintf@ap:
   226                           	opt stack 0
   227                           
   228                           ; 2 bytes @ 0x13
   229  000014                     	ds	2
   230  000016                     sprintf@flag:
   231                           	opt stack 0
   232                           
   233                           ; 1 bytes @ 0x15
   234  000016                     	ds	1
   235  000017                     sprintf@prec:
   236                           	opt stack 0
   237                           
   238                           ; 1 bytes @ 0x16
   239  000017                     	ds	1
   240  000018                     sprintf@val:
   241                           	opt stack 0
   242                           
   243                           ; 2 bytes @ 0x17
   244  000018                     	ds	2
   245  00001A                     sprintf@c:
   246                           	opt stack 0
   247                           
   248                           ; 1 bytes @ 0x19
   249  00001A                     	ds	1
   250  00001B                     ??_main:
   251                           
   252                           ; 1 bytes @ 0x1A
   253  00001B                     	ds	2
   254  00001D                     main@str_tmp:
   255                           	opt stack 0
   256                           
   257                           ; 20 bytes @ 0x1C
   258  00001D                     	ds	20
   259  000031                     main@channel:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0x30
   263  000031                     	ds	1
   264  000032                     main@config3:
   265                           	opt stack 0
   266                           
   267                           ; 1 bytes @ 0x31
   268  000032                     	ds	1
   269  000033                     main@i:
   270                           	opt stack 0
   271                           
   272                           ; 1 bytes @ 0x32
   273  000033                     	ds	1
   274  000034                     main@tmp:
   275                           	opt stack 0
   276                           
   277                           ; 2 bytes @ 0x33
   278  000034                     	ds	2
   279  000036                     main@config1:
   280                           	opt stack 0
   281                           
   282                           ; 1 bytes @ 0x35
   283  000036                     	ds	1
   284  000037                     main@config2:
   285                           	opt stack 0
   286                           
   287                           ; 1 bytes @ 0x36
   288  000037                     	ds	1
   289  000038                     main@portconfig:
   290                           	opt stack 0
   291                           
   292                           ; 1 bytes @ 0x37
   293  000038                     	ds	1
   294                           tblptru	equ	0xFF8
   295                           
   296 ;;
   297 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   298 ;;
   299 ;; *************** function _main *****************
   300 ;; Defined at:
   301 ;;		line 41 in file "main.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;  str_tmp        20   28[COMRAM] unsigned char [20]
   306 ;;  tmp             2   51[COMRAM] int 
   307 ;;  portconfig      1   55[COMRAM] unsigned char 
   308 ;;  config2         1   54[COMRAM] unsigned char 
   309 ;;  config1         1   53[COMRAM] unsigned char 
   310 ;;  i               1   50[COMRAM] unsigned char 
   311 ;;  config3         1   49[COMRAM] unsigned char 
   312 ;;  channel         1   48[COMRAM] unsigned char 
   313 ;; Return value:  Size  Location     Type
   314 ;;                  2   58[None  ] int 
   315 ;; Registers used:
   316 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   322 ;;      Params:         0       0       0       0       0       0       0
   323 ;;      Locals:        28       0       0       0       0       0       0
   324 ;;      Temps:          2       0       0       0       0       0       0
   325 ;;      Totals:        30       0       0       0       0       0       0
   326 ;;Total ram usage:       30 bytes
   327 ;; Hardware stack levels required when called:    4
   328 ;; This function calls:
   329 ;;		_BusyADC
   330 ;;		_CloseADC
   331 ;;		_ConvertADC
   332 ;;		_OpenADC
   333 ;;		_ReadADC
   334 ;;		_initXLCD
   335 ;;		_putsXLCD
   336 ;;		_sprintf
   337 ;; This function is called by:
   338 ;;		Startup code after reset
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342                           	psect	text0
   343  00075C                     __ptext0:
   344                           	opt stack 0
   345  00075C                     _main:
   346                           	opt stack 27
   347                           
   348                           ;main.c: 42: _delay((unsigned long)((100)*(4000000/4000.0)));
   349                           
   350                           ;incstack = 0
   351  00075C  0E82               	movlw	130
   352  00075E  6E1B               	movwf	??_main& (0+255),c
   353  000760  0EDE               	movlw	222
   354  000762                     u1857:
   355  000762  2EE8               	decfsz	wreg,f,c
   356  000764  D7FE               	bra	u1857
   357  000766  2E1B               	decfsz	??_main& (0+255),f,c
   358  000768  D7FC               	bra	u1857
   359                           
   360                           ;main.c: 43: LATA = 0xFF;
   361  00076A  6889               	setf	3977,c	;volatile
   362                           
   363                           ;main.c: 44: LATB = 0xFF;
   364  00076C  688A               	setf	3978,c	;volatile
   365                           
   366                           ;main.c: 46: initXLCD();
   367  00076E  EC92  F005         	call	_initXLCD	;wreg free
   368                           
   369                           ;main.c: 48: char str_tmp[20];
   370                           ;main.c: 50: int tmp;
   371                           ;main.c: 51: unsigned char channel=0x00,config1=0x00,config2=0x00,config3=0x00,portconfi
      +                          g=0x00,i=0;
   372  000772  0E00               	movlw	0
   373  000774  6E31               	movwf	main@channel,c
   374  000776  0E00               	movlw	0
   375  000778  6E36               	movwf	main@config1,c
   376  00077A  0E00               	movlw	0
   377  00077C  6E37               	movwf	main@config2,c
   378  00077E  0E00               	movlw	0
   379  000780  6E32               	movwf	main@config3,c
   380  000782  0E00               	movlw	0
   381  000784  6E38               	movwf	main@portconfig,c
   382  000786  0E00               	movlw	0
   383  000788  6E33               	movwf	main@i,c
   384                           
   385                           ;main.c: 52: TRISAbits.RA0 = 1;
   386  00078A  8092               	bsf	3986,0,c	;volatile
   387                           
   388                           ;main.c: 53: config1 = 0b11001111 & 0b11111111 & 0b11110101 ;
   389  00078C  0EC5               	movlw	197
   390  00078E  6E36               	movwf	main@config1,c
   391                           
   392                           ;main.c: 54: config2 = 0b10000111 & 0b01111111 & 0b11111100 ;
   393  000790  0E04               	movlw	4
   394  000792  6E37               	movwf	main@config2,c
   395                           
   396                           ;main.c: 55: portconfig = 0b11111110 ;
   397  000794  0EFE               	movlw	254
   398  000796  6E38               	movwf	main@portconfig,c
   399                           
   400                           ;main.c: 56: OpenADC(config1,config2,portconfig);
   401  000798  C037  F001         	movff	main@config2,OpenADC@config2
   402  00079C  C038  F002         	movff	main@portconfig,OpenADC@portconfig
   403  0007A0  5036               	movf	main@config1,w,c
   404  0007A2  EC67  F004         	call	_OpenADC
   405  0007A6                     
   406                           ;main.c: 60: {
   407                           ;main.c: 62: ConvertADC();
   408  0007A6  ECCE  F005         	call	_ConvertADC	;wreg free
   409  0007AA  ECBB  F005         	call	_BusyADC	;wreg free
   410  0007AE  0900               	iorlw	0
   411  0007B0  A4D8               	btfss	status,2,c
   412  0007B2  D7FB               	goto	l61
   413                           
   414                           ;main.c: 64: tmp = ReadADC();
   415  0007B4  ECB4  F005         	call	_ReadADC	;wreg free
   416  0007B8  C001  F034         	movff	?_ReadADC,main@tmp
   417  0007BC  C002  F035         	movff	?_ReadADC+1,main@tmp+1
   418                           
   419                           ;main.c: 65: sprintf(str_tmp, "%d",tmp);
   420  0007C0  0E1D               	movlw	low main@str_tmp
   421  0007C2  6E0D               	movwf	sprintf@sp,c
   422  0007C4  0E00               	movlw	high main@str_tmp
   423  0007C6  6E0E               	movwf	sprintf@sp+1,c
   424  0007C8  0E10               	movlw	low STR_1
   425  0007CA  6E0F               	movwf	sprintf@f,c
   426  0007CC  0E06               	movlw	high STR_1
   427  0007CE  6E10               	movwf	sprintf@f+1,c
   428  0007D0  C034  F011         	movff	main@tmp,?_sprintf+4
   429  0007D4  C035  F012         	movff	main@tmp+1,?_sprintf+5
   430  0007D8  EC0A  F003         	call	_sprintf	;wreg free
   431                           
   432                           ;main.c: 68: putsXLCD(str_tmp);
   433  0007DC  0E1D               	movlw	low main@str_tmp
   434  0007DE  6E02               	movwf	putsXLCD@buffer,c
   435  0007E0  0E00               	movlw	high main@str_tmp
   436  0007E2  6E03               	movwf	putsXLCD@buffer+1,c
   437  0007E4  EC96  F004         	call	_putsXLCD	;wreg free
   438                           
   439                           ;main.c: 70: _delay((unsigned long)((500)*(4000000/4000.0)));
   440  0007E8  0E03               	movlw	3
   441  0007EA  6E1C               	movwf	(??_main+1)& (0+255),c
   442  0007EC  0E8A               	movlw	138
   443  0007EE  6E1B               	movwf	??_main& (0+255),c
   444  0007F0  0E56               	movlw	86
   445  0007F2                     u1867:
   446  0007F2  2EE8               	decfsz	wreg,f,c
   447  0007F4  D7FE               	bra	u1867
   448  0007F6  2E1B               	decfsz	??_main& (0+255),f,c
   449  0007F8  D7FC               	bra	u1867
   450  0007FA  2E1C               	decfsz	(??_main+1)& (0+255),f,c
   451  0007FC  D7FA               	bra	u1867
   452                           
   453                           ;main.c: 71: initXLCD();
   454  0007FE  EC92  F005         	call	_initXLCD	;wreg free
   455                           
   456                           ;main.c: 72: putsXLCD("Test");
   457  000802  0E0B               	movlw	low STR_2
   458  000804  6E02               	movwf	putsXLCD@buffer,c
   459  000806  0E06               	movlw	high STR_2
   460  000808  6E03               	movwf	putsXLCD@buffer+1,c
   461  00080A  EC96  F004         	call	_putsXLCD	;wreg free
   462                           
   463                           ;main.c: 73: _delay((unsigned long)((500)*(4000000/4000.0)));
   464  00080E  0E03               	movlw	3
   465  000810  6E1C               	movwf	(??_main+1)& (0+255),c
   466  000812  0E8A               	movlw	138
   467  000814  6E1B               	movwf	??_main& (0+255),c
   468  000816  0E56               	movlw	86
   469  000818                     u1877:
   470  000818  2EE8               	decfsz	wreg,f,c
   471  00081A  D7FE               	bra	u1877
   472  00081C  2E1B               	decfsz	??_main& (0+255),f,c
   473  00081E  D7FC               	bra	u1877
   474  000820  2E1C               	decfsz	(??_main+1)& (0+255),f,c
   475  000822  D7FA               	bra	u1877
   476                           
   477                           ;main.c: 74: initXLCD();
   478  000824  EC92  F005         	call	_initXLCD	;wreg free
   479  000828  D7BE               	goto	l59
   480  00082A                     __end_of_main:
   481                           	opt stack 0
   482                           tblptru	equ	0xFF8
   483                           wreg	equ	0xFE8
   484                           status	equ	0xFD8
   485                           
   486 ;; *************** function _sprintf *****************
   487 ;; Defined at:
   488 ;;		line 492 in file "/opt/microchip/xc8/v1.44/sources/common/doprnt.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;  sp              2   12[COMRAM] PTR unsigned char 
   491 ;;		 -> main@str_tmp(20), 
   492 ;;  f               2   14[COMRAM] PTR const unsigned char 
   493 ;;		 -> STR_1(3), 
   494 ;; Auto vars:     Size  Location     Type
   495 ;;  tmpval          4    0        struct .
   496 ;;  cp              3    0        PTR const unsigned char 
   497 ;;  val             2   23[COMRAM] unsigned int 
   498 ;;  ap              2   19[COMRAM] PTR void [1]
   499 ;;		 -> ?_sprintf(2), 
   500 ;;  len             2    0        unsigned int 
   501 ;;  c               1   25[COMRAM] char 
   502 ;;  prec            1   22[COMRAM] char 
   503 ;;  flag            1   21[COMRAM] unsigned char 
   504 ;; Return value:  Size  Location     Type
   505 ;;                  2   12[COMRAM] int 
   506 ;; Registers used:
   507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   513 ;;      Params:         6       0       0       0       0       0       0
   514 ;;      Locals:         7       0       0       0       0       0       0
   515 ;;      Temps:          1       0       0       0       0       0       0
   516 ;;      Totals:        14       0       0       0       0       0       0
   517 ;;Total ram usage:       14 bytes
   518 ;; Hardware stack levels used:    1
   519 ;; Hardware stack levels required when called:    1
   520 ;; This function calls:
   521 ;;		___lwdiv
   522 ;;		___lwmod
   523 ;; This function is called by:
   524 ;;		_main
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           	psect	text1
   529  000614                     __ptext1:
   530                           	opt stack 0
   531  000614                     _sprintf:
   532                           	opt stack 29
   533                           
   534                           ;doprnt.c: 494: va_list ap;
   535                           ;doprnt.c: 499: signed char c;
   536                           ;doprnt.c: 506: signed char prec;
   537                           ;doprnt.c: 508: unsigned char flag;
   538                           ;doprnt.c: 523: union {
   539                           ;doprnt.c: 524: unsigned long vd;
   540                           ;doprnt.c: 525: double integ;
   541                           ;doprnt.c: 526: } tmpval;
   542                           ;doprnt.c: 528: unsigned int val;
   543                           ;doprnt.c: 529: unsigned len;
   544                           ;doprnt.c: 530: const char * cp;
   545                           ;doprnt.c: 533: *ap = __va_start();
   546                           
   547                           ;incstack = 0
   548  000614  0E11               	movlw	low (?_sprintf+4)
   549  000616  6E14               	movwf	sprintf@ap,c
   550  000618  0E00               	movlw	high (?_sprintf+4)
   551  00061A  6E15               	movwf	sprintf@ap+1,c
   552                           
   553                           ;doprnt.c: 536: while(c = *f++) {
   554  00061C  D08C               	goto	u1780
   555  00061E                     
   556                           ;doprnt.c: 538: if(c != '%')
   557  00061E  0E25               	movlw	37
   558  000620  181A               	xorwf	sprintf@c,w,c
   559  000622  B4D8               	btfsc	status,2,c
   560  000624  D009               	goto	l744
   561                           
   562                           ;doprnt.c: 540: {
   563                           ;doprnt.c: 541: ((*sp++ = (c)));
   564  000626  C00D  FFD9         	movff	sprintf@sp,fsr2l
   565  00062A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   566  00062E  C01A  FFDF         	movff	sprintf@c,indf2
   567  000632  4A0D               	infsnz	sprintf@sp,f,c
   568  000634  2A0E               	incf	sprintf@sp+1,f,c
   569                           
   570                           ;doprnt.c: 542: continue;
   571  000636  D07F               	goto	u1780
   572  000638                     l744:
   573                           
   574                           ;doprnt.c: 543: }
   575                           ;doprnt.c: 548: flag = 0;
   576  000638  0E00               	movlw	0
   577  00063A  6E16               	movwf	sprintf@flag,c
   578                           
   579                           ;doprnt.c: 822: }
   580                           
   581                           ;doprnt.c: 813: continue;
   582                           
   583                           ;doprnt.c: 802: default:
   584                           
   585                           ;doprnt.c: 698: case 'i':
   586                           ;doprnt.c: 699: break;
   587                           
   588                           ;doprnt.c: 697: case 'd':
   589                           
   590                           ;doprnt.c: 638: goto alldone;
   591                           
   592                           ;doprnt.c: 637: case 0:
   593                           
   594                           ;doprnt.c: 635: switch(c = *f++) {
   595  00063C  C00F  FFF6         	movff	sprintf@f,tblptrl
   596  000640  C010  FFF7         	movff	sprintf@f+1,tblptrh
   597  000644  4A0F               	infsnz	sprintf@f,f,c
   598  000646  2A10               	incf	sprintf@f+1,f,c
   599  000648                     	if	0	;tblptru may be non-zero
   600  000648                     	endif
   601  000648                     	if	0	;tblptru may be non-zero
   602  000648                     	endif
   603  000648  0008               	tblrd		*
   604  00064A  CFF5 F01A          	movff	tablat,sprintf@c
   605  00064E  501A               	movf	sprintf@c,w,c
   606                           
   607                           ; Switch size 1, requested type "space"
   608                           ; Number of cases is 3, Range of values is 0 to 105
   609                           ; switch strategies available:
   610                           ; Name         Instructions Cycles
   611                           ; simple_byte           10     6 (average)
   612                           ;	Chosen strategy is simple_byte
   613  000650  0A00               	xorlw	0	; case 0
   614  000652  B4D8               	btfsc	status,2,c
   615  000654  D07C               	goto	u1790
   616  000656  0A64               	xorlw	100	; case 100
   617  000658  B4D8               	btfsc	status,2,c
   618  00065A  D003               	goto	l750
   619  00065C  0A0D               	xorlw	13	; case 105
   620  00065E  A4D8               	btfss	status,2,c
   621  000660  D06A               	goto	u1780
   622  000662                     l750:
   623                           
   624                           ;doprnt.c: 1253: {
   625                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   626  000662  C014  FFD9         	movff	sprintf@ap,fsr2l
   627  000666  C015  FFDA         	movff	sprintf@ap+1,fsr2h
   628  00066A  CFDE F018          	movff	postinc2,sprintf@val
   629  00066E  CFDD F019          	movff	postdec2,sprintf@val+1
   630  000672  0E02               	movlw	2
   631  000674  2614               	addwf	sprintf@ap,f,c
   632  000676  0E00               	movlw	0
   633  000678  2215               	addwfc	sprintf@ap+1,f,c
   634                           
   635                           ;doprnt.c: 1261: if((int)val < 0) {
   636  00067A  AE19               	btfss	sprintf@val+1,7,c
   637  00067C  D006               	goto	l752
   638                           
   639                           ;doprnt.c: 1262: flag |= 0x03;
   640  00067E  0E03               	movlw	3
   641  000680  1216               	iorwf	sprintf@flag,f,c
   642                           
   643                           ;doprnt.c: 1263: val = -val;
   644  000682  6C18               	negf	sprintf@val,c
   645  000684  1E19               	comf	sprintf@val+1,f,c
   646  000686  B0D8               	btfsc	status,0,c
   647  000688  2A19               	incf	sprintf@val+1,f,c
   648  00068A                     l752:
   649                           
   650                           ;doprnt.c: 1264: }
   651                           ;doprnt.c: 1266: }
   652                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   653  00068A  0E01               	movlw	1
   654  00068C  6E1A               	movwf	sprintf@c,c
   655  00068E                     l2210:
   656  00068E  0E05               	movlw	5
   657  000690  181A               	xorwf	sprintf@c,w,c
   658  000692  B4D8               	btfsc	status,2,c
   659  000694  D012               	goto	u1760
   660                           
   661                           ;doprnt.c: 1306: if(val < dpowers[c])
   662  000696  501A               	movf	sprintf@c,w,c
   663  000698  0D02               	mullw	2
   664  00069A  0E01               	movlw	low _dpowers
   665  00069C  24F3               	addwf	prodl,w,c
   666  00069E  6EF6               	movwf	tblptrl,c
   667  0006A0  0E06               	movlw	high _dpowers
   668  0006A2  20F4               	addwfc	prodh,w,c
   669  0006A4  6EF7               	movwf	tblptrh,c
   670  0006A6                     	if	0	;There are less than 3 active tblptr bytes
   671  0006A6                     	endif
   672  0006A6  0009               	tblrd		*+
   673  0006A8  50F5               	movf	tablat,w,c
   674  0006AA  5C18               	subwf	sprintf@val,w,c
   675  0006AC  0009               	tblrd		*+
   676  0006AE  50F5               	movf	tablat,w,c
   677  0006B0  5819               	subwfb	sprintf@val+1,w,c
   678  0006B2  A0D8               	btfss	status,0,c
   679  0006B4  D002               	goto	u1760
   680                           
   681                           ;doprnt.c: 1307: break;
   682  0006B6  2A1A               	incf	sprintf@c,f,c
   683  0006B8  D7EA               	goto	l2210
   684  0006BA                     u1760:
   685                           
   686                           ;doprnt.c: 1422: {
   687                           ;doprnt.c: 1438: if(flag & 0x03)
   688  0006BA  C016  F013         	movff	sprintf@flag,??_sprintf
   689  0006BE  0E03               	movlw	3
   690  0006C0  1613               	andwf	??_sprintf,f,c
   691  0006C2  B4D8               	btfsc	status,2,c
   692  0006C4  D008               	goto	l756
   693                           
   694                           ;doprnt.c: 1439: ((*sp++ = ('-')));
   695  0006C6  C00D  FFD9         	movff	sprintf@sp,fsr2l
   696  0006CA  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   697  0006CE  0E2D               	movlw	45
   698  0006D0  6EDF               	movwf	indf2,c
   699  0006D2  4A0D               	infsnz	sprintf@sp,f,c
   700  0006D4  2A0E               	incf	sprintf@sp+1,f,c
   701  0006D6                     l756:
   702                           
   703                           ;doprnt.c: 1469: }
   704                           ;doprnt.c: 1472: prec = c;
   705  0006D6  C01A  F017         	movff	sprintf@c,sprintf@prec
   706                           
   707                           ;doprnt.c: 1474: while(prec--) {
   708  0006DA  D029               	goto	l757
   709  0006DC                     
   710                           ;doprnt.c: 1478: {
   711                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
   712  0006DC  5017               	movf	sprintf@prec,w,c
   713  0006DE  0D02               	mullw	2
   714  0006E0  0E01               	movlw	low _dpowers
   715  0006E2  24F3               	addwf	prodl,w,c
   716  0006E4  6EF6               	movwf	tblptrl,c
   717  0006E6  0E06               	movlw	high _dpowers
   718  0006E8  20F4               	addwfc	prodh,w,c
   719  0006EA  6EF7               	movwf	tblptrh,c
   720  0006EC                     	if	0	;There are less than 3 active tblptr bytes
   721  0006EC                     	endif
   722  0006EC  0009               	tblrd		*+
   723  0006EE  CFF5 F003          	movff	tablat,___lwdiv@divisor
   724  0006F2  000A               	tblrd		*-
   725  0006F4  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
   726  0006F8  C018  F001         	movff	sprintf@val,___lwdiv@dividend
   727  0006FC  C019  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
   728  000700  ECC4  F004         	call	___lwdiv	;wreg free
   729  000704  C001  F008         	movff	?___lwdiv,___lwmod@dividend
   730  000708  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
   731  00070C  0E00               	movlw	0
   732  00070E  6E0B               	movwf	___lwmod@divisor+1,c
   733  000710  0E0A               	movlw	10
   734  000712  6E0A               	movwf	___lwmod@divisor,c
   735  000714  EC16  F005         	call	___lwmod	;wreg free
   736  000718  5008               	movf	?___lwmod,w,c
   737  00071A  0F30               	addlw	48
   738  00071C  6E1A               	movwf	sprintf@c,c
   739                           
   740                           ;doprnt.c: 1523: }
   741                           ;doprnt.c: 1524: ((*sp++ = (c)));
   742  00071E  C00D  FFD9         	movff	sprintf@sp,fsr2l
   743  000722  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   744  000726  C01A  FFDF         	movff	sprintf@c,indf2
   745  00072A  4A0D               	infsnz	sprintf@sp,f,c
   746  00072C  2A0E               	incf	sprintf@sp+1,f,c
   747  00072E                     l757:
   748  00072E  0617               	decf	sprintf@prec,f,c
   749  000730  2817               	incf	sprintf@prec,w,c
   750  000732  A4D8               	btfss	status,2,c
   751  000734  D7D3               	goto	l758
   752  000736                     u1780:
   753  000736  C00F  FFF6         	movff	sprintf@f,tblptrl
   754  00073A  C010  FFF7         	movff	sprintf@f+1,tblptrh
   755  00073E  4A0F               	infsnz	sprintf@f,f,c
   756  000740  2A10               	incf	sprintf@f+1,f,c
   757  000742                     	if	0	;tblptru may be non-zero
   758  000742                     	endif
   759  000742                     	if	0	;tblptru may be non-zero
   760  000742                     	endif
   761  000742  0008               	tblrd		*
   762  000744  CFF5 F01A          	movff	tablat,sprintf@c
   763  000748  501A               	movf	sprintf@c,w,c
   764  00074A  A4D8               	btfss	status,2,c
   765  00074C  D768               	goto	l743
   766  00074E                     u1790:
   767                           
   768                           ;doprnt.c: 1538: *sp = 0;
   769                           
   770                           ;doprnt.c: 1525: }
   771                           ;doprnt.c: 1533: }
   772                           ;doprnt.c: 1535: alldone:
   773  00074E  C00D  FFD9         	movff	sprintf@sp,fsr2l
   774  000752  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   775  000756  0E00               	movlw	0
   776  000758  6EDF               	movwf	indf2,c
   777  00075A  0012               	return	
   778  00075C                     __end_of_sprintf:
   779                           	opt stack 0
   780                           tblptru	equ	0xFF8
   781                           tblptrh	equ	0xFF7
   782                           tblptrl	equ	0xFF6
   783                           tablat	equ	0xFF5
   784                           prodh	equ	0xFF4
   785                           prodl	equ	0xFF3
   786                           wreg	equ	0xFE8
   787                           indf2	equ	0xFDF
   788                           postinc2	equ	0xFDE
   789                           postdec2	equ	0xFDD
   790                           fsr2h	equ	0xFDA
   791                           fsr2l	equ	0xFD9
   792                           status	equ	0xFD8
   793                           
   794 ;; *************** function ___lwmod *****************
   795 ;; Defined at:
   796 ;;		line 8 in file "/opt/microchip/xc8/v1.44/sources/common/lwmod.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  dividend        2    7[COMRAM] unsigned int 
   799 ;;  divisor         2    9[COMRAM] unsigned int 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;  counter         1   11[COMRAM] unsigned char 
   802 ;; Return value:  Size  Location     Type
   803 ;;                  2    7[COMRAM] unsigned int 
   804 ;; Registers used:
   805 ;;		wreg, status,2, status,0
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   811 ;;      Params:         4       0       0       0       0       0       0
   812 ;;      Locals:         1       0       0       0       0       0       0
   813 ;;      Temps:          0       0       0       0       0       0       0
   814 ;;      Totals:         5       0       0       0       0       0       0
   815 ;;Total ram usage:        5 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; This function calls:
   818 ;;		Nothing
   819 ;; This function is called by:
   820 ;;		_sprintf
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text2
   825  000A2C                     __ptext2:
   826                           	opt stack 0
   827  000A2C                     ___lwmod:
   828                           	opt stack 29
   829                           
   830                           ;incstack = 0
   831  000A2C  500A               	movf	___lwmod@divisor,w,c
   832  000A2E  100B               	iorwf	___lwmod@divisor+1,w,c
   833  000A30  B4D8               	btfsc	status,2,c
   834  000A32  D018               	goto	l1187
   835  000A34  0E01               	movlw	1
   836  000A36  6E0C               	movwf	___lwmod@counter,c
   837  000A38  D004               	goto	l1182
   838  000A3A  90D8               	bcf	status,0,c
   839  000A3C  360A               	rlcf	___lwmod@divisor,f,c
   840  000A3E  360B               	rlcf	___lwmod@divisor+1,f,c
   841  000A40  2A0C               	incf	___lwmod@counter,f,c
   842  000A42                     l1182:
   843  000A42  AE0B               	btfss	___lwmod@divisor+1,7,c
   844  000A44  D7FA               	goto	l1183
   845  000A46                     u1690:
   846  000A46  500A               	movf	___lwmod@divisor,w,c
   847  000A48  5C08               	subwf	___lwmod@dividend,w,c
   848  000A4A  500B               	movf	___lwmod@divisor+1,w,c
   849  000A4C  5809               	subwfb	___lwmod@dividend+1,w,c
   850  000A4E  A0D8               	btfss	status,0,c
   851  000A50  D004               	goto	l1186
   852  000A52  500A               	movf	___lwmod@divisor,w,c
   853  000A54  5E08               	subwf	___lwmod@dividend,f,c
   854  000A56  500B               	movf	___lwmod@divisor+1,w,c
   855  000A58  5A09               	subwfb	___lwmod@dividend+1,f,c
   856  000A5A                     l1186:
   857  000A5A  90D8               	bcf	status,0,c
   858  000A5C  320B               	rrcf	___lwmod@divisor+1,f,c
   859  000A5E  320A               	rrcf	___lwmod@divisor,f,c
   860  000A60  2E0C               	decfsz	___lwmod@counter,f,c
   861  000A62  D7F1               	goto	u1690
   862  000A64                     l1187:
   863  000A64  C008  F008         	movff	___lwmod@dividend,?___lwmod
   864  000A68  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
   865  000A6C  0012               	return		;funcret
   866  000A6E                     __end_of___lwmod:
   867                           	opt stack 0
   868                           tblptru	equ	0xFF8
   869                           tblptrh	equ	0xFF7
   870                           tblptrl	equ	0xFF6
   871                           tablat	equ	0xFF5
   872                           prodh	equ	0xFF4
   873                           prodl	equ	0xFF3
   874                           wreg	equ	0xFE8
   875                           indf2	equ	0xFDF
   876                           postinc2	equ	0xFDE
   877                           postdec2	equ	0xFDD
   878                           fsr2h	equ	0xFDA
   879                           fsr2l	equ	0xFD9
   880                           status	equ	0xFD8
   881                           
   882 ;; *************** function ___lwdiv *****************
   883 ;; Defined at:
   884 ;;		line 8 in file "/opt/microchip/xc8/v1.44/sources/common/lwdiv.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;  dividend        2    0[COMRAM] unsigned int 
   887 ;;  divisor         2    2[COMRAM] unsigned int 
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  quotient        2    4[COMRAM] unsigned int 
   890 ;;  counter         1    6[COMRAM] unsigned char 
   891 ;; Return value:  Size  Location     Type
   892 ;;                  2    0[COMRAM] unsigned int 
   893 ;; Registers used:
   894 ;;		wreg, status,2, status,0
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   900 ;;      Params:         4       0       0       0       0       0       0
   901 ;;      Locals:         3       0       0       0       0       0       0
   902 ;;      Temps:          0       0       0       0       0       0       0
   903 ;;      Totals:         7       0       0       0       0       0       0
   904 ;;Total ram usage:        7 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; This function calls:
   907 ;;		Nothing
   908 ;; This function is called by:
   909 ;;		_sprintf
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           	psect	text3
   914  000988                     __ptext3:
   915                           	opt stack 0
   916  000988                     ___lwdiv:
   917                           	opt stack 29
   918                           
   919                           ;incstack = 0
   920  000988  0E00               	movlw	0
   921  00098A  6E06               	movwf	___lwdiv@quotient+1,c
   922  00098C  0E00               	movlw	0
   923  00098E  6E05               	movwf	___lwdiv@quotient,c
   924  000990  5003               	movf	___lwdiv@divisor,w,c
   925  000992  1004               	iorwf	___lwdiv@divisor+1,w,c
   926  000994  B4D8               	btfsc	status,2,c
   927  000996  D01C               	goto	l1177
   928  000998  0E01               	movlw	1
   929  00099A  6E07               	movwf	___lwdiv@counter,c
   930  00099C  D004               	goto	l1172
   931  00099E  90D8               	bcf	status,0,c
   932  0009A0  3603               	rlcf	___lwdiv@divisor,f,c
   933  0009A2  3604               	rlcf	___lwdiv@divisor+1,f,c
   934  0009A4  2A07               	incf	___lwdiv@counter,f,c
   935  0009A6                     l1172:
   936  0009A6  AE04               	btfss	___lwdiv@divisor+1,7,c
   937  0009A8  D7FA               	goto	l1173
   938  0009AA                     u1660:
   939  0009AA  90D8               	bcf	status,0,c
   940  0009AC  3605               	rlcf	___lwdiv@quotient,f,c
   941  0009AE  3606               	rlcf	___lwdiv@quotient+1,f,c
   942  0009B0  5003               	movf	___lwdiv@divisor,w,c
   943  0009B2  5C01               	subwf	___lwdiv@dividend,w,c
   944  0009B4  5004               	movf	___lwdiv@divisor+1,w,c
   945  0009B6  5802               	subwfb	___lwdiv@dividend+1,w,c
   946  0009B8  A0D8               	btfss	status,0,c
   947  0009BA  D005               	goto	l1176
   948  0009BC  5003               	movf	___lwdiv@divisor,w,c
   949  0009BE  5E01               	subwf	___lwdiv@dividend,f,c
   950  0009C0  5004               	movf	___lwdiv@divisor+1,w,c
   951  0009C2  5A02               	subwfb	___lwdiv@dividend+1,f,c
   952  0009C4  8005               	bsf	___lwdiv@quotient,0,c
   953  0009C6                     l1176:
   954  0009C6  90D8               	bcf	status,0,c
   955  0009C8  3204               	rrcf	___lwdiv@divisor+1,f,c
   956  0009CA  3203               	rrcf	___lwdiv@divisor,f,c
   957  0009CC  2E07               	decfsz	___lwdiv@counter,f,c
   958  0009CE  D7ED               	goto	u1660
   959  0009D0                     l1177:
   960  0009D0  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
   961  0009D4  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
   962  0009D8  0012               	return		;funcret
   963  0009DA                     __end_of___lwdiv:
   964                           	opt stack 0
   965                           tblptru	equ	0xFF8
   966                           tblptrh	equ	0xFF7
   967                           tblptrl	equ	0xFF6
   968                           tablat	equ	0xFF5
   969                           prodh	equ	0xFF4
   970                           prodl	equ	0xFF3
   971                           wreg	equ	0xFE8
   972                           indf2	equ	0xFDF
   973                           postinc2	equ	0xFDE
   974                           postdec2	equ	0xFDD
   975                           fsr2h	equ	0xFDA
   976                           fsr2l	equ	0xFD9
   977                           status	equ	0xFD8
   978                           
   979 ;; *************** function _putsXLCD *****************
   980 ;; Defined at:
   981 ;;		line 16 in file "putsxlcd.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;  buffer          2    1[COMRAM] PTR unsigned char 
   984 ;;		 -> STR_2(5), main@str_tmp(20), 
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   996 ;;      Params:         2       0       0       0       0       0       0
   997 ;;      Locals:         0       0       0       0       0       0       0
   998 ;;      Temps:          0       0       0       0       0       0       0
   999 ;;      Totals:         2       0       0       0       0       0       0
  1000 ;;Total ram usage:        2 bytes
  1001 ;; Hardware stack levels used:    1
  1002 ;; Hardware stack levels required when called:    2
  1003 ;; This function calls:
  1004 ;;		_BusyXLCD
  1005 ;;		_WriteDataXLCD
  1006 ;; This function is called by:
  1007 ;;		_main
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           	psect	text4
  1012  00092C                     __ptext4:
  1013                           	opt stack 0
  1014  00092C                     _putsXLCD:
  1015                           	opt stack 28
  1016                           
  1017                           ;putsxlcd.c: 18: while(*buffer)
  1018                           
  1019                           ;incstack = 0
  1020  00092C  D019               	goto	l127
  1021  00092E                     
  1022                           ;putsxlcd.c: 19: {
  1023                           ;putsxlcd.c: 20: while(BusyXLCD());
  1024  00092E  EC75  F005         	call	_BusyXLCD	;wreg free
  1025  000932  0900               	iorlw	0
  1026  000934  A4D8               	btfss	status,2,c
  1027  000936  D7FB               	goto	l128
  1028                           
  1029                           ;putsxlcd.c: 21: WriteDataXLCD(*buffer);
  1030  000938  C002  FFF6         	movff	putsXLCD@buffer,tblptrl
  1031  00093C  C003  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  1032  000940  6AF8               	clrf	tblptru,c
  1033  000942  0E05               	movlw	(high __ramtop+-1)
  1034  000944  64F7               	cpfsgt	tblptrh,c
  1035  000946  D003               	bra	u1817
  1036  000948  0008               	tblrd		*
  1037  00094A  50F5               	movf	tablat,w,c
  1038  00094C  D005               	bra	u1810
  1039  00094E                     u1817:
  1040  00094E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1041  000952  CFF7 FFEA          	movff	tblptrh,fsr0h
  1042  000956  50EF               	movf	indf0,w,c
  1043  000958                     u1810:
  1044  000958  EC37  F005         	call	_WriteDataXLCD
  1045                           
  1046                           ;putsxlcd.c: 22: buffer++;
  1047  00095C  4A02               	infsnz	putsXLCD@buffer,f,c
  1048  00095E  2A03               	incf	putsXLCD@buffer+1,f,c
  1049  000960                     l127:
  1050  000960  C002  FFF6         	movff	putsXLCD@buffer,tblptrl
  1051  000964  C003  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  1052  000968  6AF8               	clrf	tblptru,c
  1053  00096A  0E05               	movlw	(high __ramtop+-1)
  1054  00096C  64F7               	cpfsgt	tblptrh,c
  1055  00096E  D003               	bra	u1827
  1056  000970  0008               	tblrd		*
  1057  000972  50F5               	movf	tablat,w,c
  1058  000974  D005               	bra	u1820
  1059  000976                     u1827:
  1060  000976  CFF6 FFE9          	movff	tblptrl,fsr0l
  1061  00097A  CFF7 FFEA          	movff	tblptrh,fsr0h
  1062  00097E  50EF               	movf	indf0,w,c
  1063  000980                     u1820:
  1064  000980  0900               	iorlw	0
  1065  000982  B4D8               	btfsc	status,2,c
  1066  000984  0012               	return	
  1067  000986  D7D3               	goto	l128
  1068  000988                     __end_of_putsXLCD:
  1069                           	opt stack 0
  1070                           tblptru	equ	0xFF8
  1071                           tblptrh	equ	0xFF7
  1072                           tblptrl	equ	0xFF6
  1073                           tablat	equ	0xFF5
  1074                           prodh	equ	0xFF4
  1075                           prodl	equ	0xFF3
  1076                           indf0	equ	0xFEF
  1077                           fsr0h	equ	0xFEA
  1078                           fsr0l	equ	0xFE9
  1079                           wreg	equ	0xFE8
  1080                           indf2	equ	0xFDF
  1081                           postinc2	equ	0xFDE
  1082                           postdec2	equ	0xFDD
  1083                           fsr2h	equ	0xFDA
  1084                           fsr2l	equ	0xFD9
  1085                           status	equ	0xFD8
  1086                           
  1087 ;; *************** function _WriteDataXLCD *****************
  1088 ;; Defined at:
  1089 ;;		line 17 in file "writdata.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;  data            1    wreg     unsigned char 
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;  data            1    0[COMRAM] unsigned char 
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, status,2, status,0, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1103 ;;      Params:         0       0       0       0       0       0       0
  1104 ;;      Locals:         1       0       0       0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0       0       0
  1106 ;;      Totals:         1       0       0       0       0       0       0
  1107 ;;Total ram usage:        1 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; Hardware stack levels required when called:    1
  1110 ;; This function calls:
  1111 ;;		_DelayFor18TCY
  1112 ;; This function is called by:
  1113 ;;		_putsXLCD
  1114 ;;		_putrsXLCD
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           	psect	text5
  1119  000A6E                     __ptext5:
  1120                           	opt stack 0
  1121  000A6E                     _WriteDataXLCD:
  1122                           	opt stack 28
  1123                           
  1124                           ;incstack = 0
  1125                           ;WriteDataXLCD@data stored from wreg
  1126  000A6E  6E01               	movwf	WriteDataXLCD@data,c
  1127                           
  1128                           ;writdata.c: 36: TRISB &= 0xf0;
  1129  000A70  0EF0               	movlw	240
  1130  000A72  1693               	andwf	3987,f,c	;volatile
  1131                           
  1132                           ;writdata.c: 37: PORTB &= 0xf0;
  1133  000A74  0EF0               	movlw	240
  1134  000A76  1681               	andwf	3969,f,c	;volatile
  1135                           
  1136                           ;writdata.c: 38: PORTB |= ((data>>4)&0x0f);
  1137  000A78  3801               	swapf	WriteDataXLCD@data,w,c
  1138  000A7A  0B0F               	andlw	15
  1139  000A7C  0B0F               	andlw	15
  1140  000A7E  1281               	iorwf	3969,f,c	;volatile
  1141                           
  1142                           ;writdata.c: 40: LATAbits.LATA3 = 1;
  1143  000A80  8689               	bsf	3977,3,c	;volatile
  1144                           
  1145                           ;writdata.c: 41: LATAbits.LATA2 = 0;
  1146  000A82  9489               	bcf	3977,2,c	;volatile
  1147                           
  1148                           ;writdata.c: 42: DelayFor18TCY();
  1149  000A84  ECC6  F005         	call	_DelayFor18TCY	;wreg free
  1150                           
  1151                           ;writdata.c: 43: LATAbits.LATA1 = 1;
  1152  000A88  8289               	bsf	3977,1,c	;volatile
  1153                           
  1154                           ;writdata.c: 44: DelayFor18TCY();
  1155  000A8A  ECC6  F005         	call	_DelayFor18TCY	;wreg free
  1156                           
  1157                           ;writdata.c: 45: LATAbits.LATA1 = 0;
  1158  000A8E  9289               	bcf	3977,1,c	;volatile
  1159                           
  1160                           ;writdata.c: 50: PORTB &= 0xf0;
  1161  000A90  0EF0               	movlw	240
  1162  000A92  1681               	andwf	3969,f,c	;volatile
  1163                           
  1164                           ;writdata.c: 51: PORTB |= (data&0x0f);
  1165  000A94  5001               	movf	WriteDataXLCD@data,w,c
  1166  000A96  0B0F               	andlw	15
  1167  000A98  1281               	iorwf	3969,f,c	;volatile
  1168                           
  1169                           ;writdata.c: 53: DelayFor18TCY();
  1170  000A9A  ECC6  F005         	call	_DelayFor18TCY	;wreg free
  1171                           
  1172                           ;writdata.c: 54: LATAbits.LATA1 = 1;
  1173  000A9E  8289               	bsf	3977,1,c	;volatile
  1174                           
  1175                           ;writdata.c: 55: DelayFor18TCY();
  1176  000AA0  ECC6  F005         	call	_DelayFor18TCY	;wreg free
  1177                           
  1178                           ;writdata.c: 56: LATAbits.LATA1 = 0;
  1179  000AA4  9289               	bcf	3977,1,c	;volatile
  1180                           
  1181                           ;writdata.c: 60: TRISB |= 0x0f;
  1182  000AA6  0E0F               	movlw	15
  1183  000AA8  1293               	iorwf	3987,f,c	;volatile
  1184  000AAA  0012               	return	
  1185  000AAC                     __end_of_WriteDataXLCD:
  1186                           	opt stack 0
  1187                           tblptru	equ	0xFF8
  1188                           tblptrh	equ	0xFF7
  1189                           tblptrl	equ	0xFF6
  1190                           tablat	equ	0xFF5
  1191                           prodh	equ	0xFF4
  1192                           prodl	equ	0xFF3
  1193                           indf0	equ	0xFEF
  1194                           fsr0h	equ	0xFEA
  1195                           fsr0l	equ	0xFE9
  1196                           wreg	equ	0xFE8
  1197                           indf2	equ	0xFDF
  1198                           postinc2	equ	0xFDE
  1199                           postdec2	equ	0xFDD
  1200                           fsr2h	equ	0xFDA
  1201                           fsr2l	equ	0xFD9
  1202                           status	equ	0xFD8
  1203                           
  1204 ;; *************** function _initXLCD *****************
  1205 ;; Defined at:
  1206 ;;		line 30 in file "main.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;		None
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;		None
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      void 
  1213 ;; Registers used:
  1214 ;;		wreg, status,2, status,0, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1220 ;;      Params:         0       0       0       0       0       0       0
  1221 ;;      Locals:         0       0       0       0       0       0       0
  1222 ;;      Temps:          0       0       0       0       0       0       0
  1223 ;;      Totals:         0       0       0       0       0       0       0
  1224 ;;Total ram usage:        0 bytes
  1225 ;; Hardware stack levels used:    1
  1226 ;; Hardware stack levels required when called:    3
  1227 ;; This function calls:
  1228 ;;		_BusyXLCD
  1229 ;;		_OpenXLCD
  1230 ;;		_WriteCmdXLCD
  1231 ;; This function is called by:
  1232 ;;		_main
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           	psect	text6
  1237  000B24                     __ptext6:
  1238                           	opt stack 0
  1239  000B24                     _initXLCD:
  1240                           	opt stack 27
  1241                           
  1242                           ;main.c: 32: OpenXLCD( 0b00101100 & 0b00111000 );
  1243                           
  1244                           ;incstack = 0
  1245  000B24  0E28               	movlw	40
  1246  000B26  EC15  F004         	call	_OpenXLCD
  1247  000B2A  EC75  F005         	call	_BusyXLCD	;wreg free
  1248  000B2E  0900               	iorlw	0
  1249  000B30  A4D8               	btfss	status,2,c
  1250  000B32  D7FB               	goto	l52
  1251                           
  1252                           ;main.c: 34: WriteCmdXLCD(0x06);
  1253  000B34  0E06               	movlw	6
  1254  000B36  EC56  F005         	call	_WriteCmdXLCD
  1255                           
  1256                           ;main.c: 35: WriteCmdXLCD(0x0C);
  1257  000B3A  0E0C               	movlw	12
  1258  000B3C  EC56  F005         	call	_WriteCmdXLCD
  1259  000B40  0012               	return		;funcret
  1260  000B42                     __end_of_initXLCD:
  1261                           	opt stack 0
  1262                           tblptru	equ	0xFF8
  1263                           tblptrh	equ	0xFF7
  1264                           tblptrl	equ	0xFF6
  1265                           tablat	equ	0xFF5
  1266                           prodh	equ	0xFF4
  1267                           prodl	equ	0xFF3
  1268                           indf0	equ	0xFEF
  1269                           fsr0h	equ	0xFEA
  1270                           fsr0l	equ	0xFE9
  1271                           wreg	equ	0xFE8
  1272                           indf2	equ	0xFDF
  1273                           postinc2	equ	0xFDE
  1274                           postdec2	equ	0xFDD
  1275                           fsr2h	equ	0xFDA
  1276                           fsr2l	equ	0xFD9
  1277                           status	equ	0xFD8
  1278                           
  1279 ;; *************** function _OpenXLCD *****************
  1280 ;; Defined at:
  1281 ;;		line 20 in file "openxlcd.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  lcdtype         1    wreg     unsigned char 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  lcdtype         1    4[COMRAM] unsigned char 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg, status,2, status,0, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1295 ;;      Params:         0       0       0       0       0       0       0
  1296 ;;      Locals:         1       0       0       0       0       0       0
  1297 ;;      Temps:          0       0       0       0       0       0       0
  1298 ;;      Totals:         1       0       0       0       0       0       0
  1299 ;;Total ram usage:        1 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:    2
  1302 ;; This function calls:
  1303 ;;		_BusyXLCD
  1304 ;;		_Delay10KTCYx
  1305 ;;		_DelayPORXLCD
  1306 ;;		_SetDDRamAddr
  1307 ;;		_WriteCmdXLCD
  1308 ;; This function is called by:
  1309 ;;		_initXLCD
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text7
  1314  00082A                     __ptext7:
  1315                           	opt stack 0
  1316  00082A                     _OpenXLCD:
  1317                           	opt stack 27
  1318                           
  1319                           ;incstack = 0
  1320                           ;OpenXLCD@lcdtype stored from wreg
  1321  00082A  6E05               	movwf	OpenXLCD@lcdtype,c
  1322                           
  1323                           ;openxlcd.c: 32: PORTB &= 0xf0;
  1324  00082C  0EF0               	movlw	240
  1325  00082E  1681               	andwf	3969,f,c	;volatile
  1326                           
  1327                           ;openxlcd.c: 33: TRISB &= 0xF0;
  1328  000830  0EF0               	movlw	240
  1329  000832  1693               	andwf	3987,f,c	;volatile
  1330                           
  1331                           ;openxlcd.c: 36: TRISAbits.TRISA2 = 0;
  1332  000834  9492               	bcf	3986,2,c	;volatile
  1333                           
  1334                           ;openxlcd.c: 37: TRISAbits.TRISA3 = 0;
  1335  000836  9692               	bcf	3986,3,c	;volatile
  1336                           
  1337                           ;openxlcd.c: 38: TRISAbits.TRISA1 = 0;
  1338  000838  9292               	bcf	3986,1,c	;volatile
  1339                           
  1340                           ;openxlcd.c: 39: LATAbits.LATA2 = 0;
  1341  00083A  9489               	bcf	3977,2,c	;volatile
  1342                           
  1343                           ;openxlcd.c: 40: LATAbits.LATA3 = 0;
  1344  00083C  9689               	bcf	3977,3,c	;volatile
  1345                           
  1346                           ;openxlcd.c: 41: LATAbits.LATA1 = 0;
  1347  00083E  9289               	bcf	3977,1,c	;volatile
  1348                           
  1349                           ;openxlcd.c: 44: DelayPORXLCD();
  1350  000840  ECAC  F005         	call	_DelayPORXLCD	;wreg free
  1351                           
  1352                           ;openxlcd.c: 46: WriteCmdXLCD(0x30);
  1353  000844  0E30               	movlw	48
  1354  000846  EC56  F005         	call	_WriteCmdXLCD
  1355                           
  1356                           ;openxlcd.c: 47: Delay10KTCYx(0x05);
  1357  00084A  0E05               	movlw	5
  1358  00084C  ECA1  F005         	call	_Delay10KTCYx
  1359                           
  1360                           ;openxlcd.c: 49: WriteCmdXLCD(0x30);
  1361  000850  0E30               	movlw	48
  1362  000852  EC56  F005         	call	_WriteCmdXLCD
  1363                           
  1364                           ;openxlcd.c: 50: Delay10KTCYx(0x01);
  1365  000856  0E01               	movlw	1
  1366  000858  ECA1  F005         	call	_Delay10KTCYx
  1367                           
  1368                           ;openxlcd.c: 53: WriteCmdXLCD(0x32);
  1369  00085C  0E32               	movlw	50
  1370  00085E  EC56  F005         	call	_WriteCmdXLCD
  1371  000862  EC75  F005         	call	_BusyXLCD	;wreg free
  1372  000866  0900               	iorlw	0
  1373  000868  A4D8               	btfss	status,2,c
  1374  00086A  D7FB               	goto	l87
  1375  00086C                     u30:
  1376                           
  1377                           ;openxlcd.c: 59: while(BusyXLCD());
  1378  00086C  EC75  F005         	call	_BusyXLCD	;wreg free
  1379  000870  0900               	iorlw	0
  1380  000872  A4D8               	btfss	status,2,c
  1381  000874  D7FB               	goto	u30
  1382                           
  1383                           ;openxlcd.c: 60: WriteCmdXLCD(lcdtype);
  1384  000876  5005               	movf	OpenXLCD@lcdtype,w,c
  1385  000878  EC56  F005         	call	_WriteCmdXLCD
  1386  00087C  EC75  F005         	call	_BusyXLCD	;wreg free
  1387  000880  0900               	iorlw	0
  1388  000882  A4D8               	btfss	status,2,c
  1389  000884  D7FB               	goto	l93
  1390                           
  1391                           ;openxlcd.c: 64: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  1392  000886  0E08               	movlw	8
  1393  000888  EC56  F005         	call	_WriteCmdXLCD
  1394  00088C  EC75  F005         	call	_BusyXLCD	;wreg free
  1395  000890  0900               	iorlw	0
  1396  000892  A4D8               	btfss	status,2,c
  1397  000894  D7FB               	goto	l96
  1398                           
  1399                           ;openxlcd.c: 66: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  1400  000896  0E0F               	movlw	15
  1401  000898  EC56  F005         	call	_WriteCmdXLCD
  1402  00089C  EC75  F005         	call	_BusyXLCD	;wreg free
  1403  0008A0  0900               	iorlw	0
  1404  0008A2  A4D8               	btfss	status,2,c
  1405  0008A4  D7FB               	goto	l99
  1406                           
  1407                           ;openxlcd.c: 70: WriteCmdXLCD(0x01);
  1408  0008A6  0E01               	movlw	1
  1409  0008A8  EC56  F005         	call	_WriteCmdXLCD
  1410  0008AC  EC75  F005         	call	_BusyXLCD	;wreg free
  1411  0008B0  0900               	iorlw	0
  1412  0008B2  A4D8               	btfss	status,2,c
  1413  0008B4  D7FB               	goto	l102
  1414                           
  1415                           ;openxlcd.c: 74: WriteCmdXLCD(0b00000100);
  1416  0008B6  0E04               	movlw	4
  1417  0008B8  EC56  F005         	call	_WriteCmdXLCD
  1418  0008BC  EC75  F005         	call	_BusyXLCD	;wreg free
  1419  0008C0  0900               	iorlw	0
  1420  0008C2  A4D8               	btfss	status,2,c
  1421  0008C4  D7FB               	goto	l105
  1422                           
  1423                           ;openxlcd.c: 78: SetDDRamAddr(0x80);
  1424  0008C6  0E80               	movlw	128
  1425  0008C8  ECED  F004         	call	_SetDDRamAddr
  1426  0008CC  0012               	return	
  1427  0008CE                     __end_of_OpenXLCD:
  1428                           	opt stack 0
  1429                           tblptru	equ	0xFF8
  1430                           tblptrh	equ	0xFF7
  1431                           tblptrl	equ	0xFF6
  1432                           tablat	equ	0xFF5
  1433                           prodh	equ	0xFF4
  1434                           prodl	equ	0xFF3
  1435                           indf0	equ	0xFEF
  1436                           fsr0h	equ	0xFEA
  1437                           fsr0l	equ	0xFE9
  1438                           wreg	equ	0xFE8
  1439                           indf2	equ	0xFDF
  1440                           postinc2	equ	0xFDE
  1441                           postdec2	equ	0xFDD
  1442                           fsr2h	equ	0xFDA
  1443                           fsr2l	equ	0xFD9
  1444                           status	equ	0xFD8
  1445                           
  1446 ;; *************** function _WriteCmdXLCD *****************
  1447 ;; Defined at:
  1448 ;;		line 14 in file "wcmdxlcd.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;  cmd             1    wreg     unsigned char 
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;  cmd             1    0[COMRAM] unsigned char 
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      void 
  1455 ;; Registers used:
  1456 ;;		wreg, status,2, status,0, cstack
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1462 ;;      Params:         0       0       0       0       0       0       0
  1463 ;;      Locals:         1       0       0       0       0       0       0
  1464 ;;      Temps:          0       0       0       0       0       0       0
  1465 ;;      Totals:         1       0       0       0       0       0       0
  1466 ;;Total ram usage:        1 bytes
  1467 ;; Hardware stack levels used:    1
  1468 ;; Hardware stack levels required when called:    1
  1469 ;; This function calls:
  1470 ;;		_DelayFor18TCY
  1471 ;; This function is called by:
  1472 ;;		_initXLCD
  1473 ;;		_OpenXLCD
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text8
  1478  000AAC                     __ptext8:
  1479                           	opt stack 0
  1480  000AAC                     _WriteCmdXLCD:
  1481                           	opt stack 28
  1482                           
  1483                           ;incstack = 0
  1484                           ;WriteCmdXLCD@cmd stored from wreg
  1485  000AAC  6E01               	movwf	WriteCmdXLCD@cmd,c
  1486                           
  1487                           ;wcmdxlcd.c: 33: TRISB &= 0xf0;
  1488  000AAE  0EF0               	movlw	240
  1489  000AB0  1693               	andwf	3987,f,c	;volatile
  1490                           
  1491                           ;wcmdxlcd.c: 34: PORTB &= 0xf0;
  1492  000AB2  0EF0               	movlw	240
  1493  000AB4  1681               	andwf	3969,f,c	;volatile
  1494                           
  1495                           ;wcmdxlcd.c: 35: PORTB |= (cmd>>4)&0x0f;
  1496  000AB6  3801               	swapf	WriteCmdXLCD@cmd,w,c
  1497  000AB8  0B0F               	andlw	15
  1498  000ABA  0B0F               	andlw	15
  1499  000ABC  1281               	iorwf	3969,f,c	;volatile
  1500                           
  1501                           ;wcmdxlcd.c: 37: LATAbits.LATA2 = 0;
  1502  000ABE  9489               	bcf	3977,2,c	;volatile
  1503                           
  1504                           ;wcmdxlcd.c: 38: LATAbits.LATA3 = 0;
  1505  000AC0  9689               	bcf	3977,3,c	;volatile
  1506                           
  1507                           ;wcmdxlcd.c: 39: DelayFor18TCY();
  1508  000AC2  ECC6  F005         	call	_DelayFor18TCY	;wreg free
  1509                           
  1510                           ;wcmdxlcd.c: 40: LATAbits.LATA1 = 1;
  1511  000AC6  8289               	bsf	3977,1,c	;volatile
  1512                           
  1513                           ;wcmdxlcd.c: 41: DelayFor18TCY();
  1514  000AC8  ECC6  F005         	call	_DelayFor18TCY	;wreg free
  1515                           
  1516                           ;wcmdxlcd.c: 42: LATAbits.LATA1 = 0;
  1517  000ACC  9289               	bcf	3977,1,c	;volatile
  1518                           
  1519                           ;wcmdxlcd.c: 47: PORTB &= 0xf0;
  1520  000ACE  0EF0               	movlw	240
  1521  000AD0  1681               	andwf	3969,f,c	;volatile
  1522                           
  1523                           ;wcmdxlcd.c: 48: PORTB |= cmd&0x0f;
  1524  000AD2  5001               	movf	WriteCmdXLCD@cmd,w,c
  1525  000AD4  0B0F               	andlw	15
  1526  000AD6  1281               	iorwf	3969,f,c	;volatile
  1527                           
  1528                           ;wcmdxlcd.c: 50: DelayFor18TCY();
  1529  000AD8  ECC6  F005         	call	_DelayFor18TCY	;wreg free
  1530                           
  1531                           ;wcmdxlcd.c: 51: LATAbits.LATA1 = 1;
  1532  000ADC  8289               	bsf	3977,1,c	;volatile
  1533                           
  1534                           ;wcmdxlcd.c: 52: DelayFor18TCY();
  1535  000ADE  ECC6  F005         	call	_DelayFor18TCY	;wreg free
  1536                           
  1537                           ;wcmdxlcd.c: 53: LATAbits.LATA1 = 0;
  1538  000AE2  9289               	bcf	3977,1,c	;volatile
  1539                           
  1540                           ;wcmdxlcd.c: 57: TRISB |= 0x0f;
  1541  000AE4  0E0F               	movlw	15
  1542  000AE6  1293               	iorwf	3987,f,c	;volatile
  1543  000AE8  0012               	return	
  1544  000AEA                     __end_of_WriteCmdXLCD:
  1545                           	opt stack 0
  1546                           tblptru	equ	0xFF8
  1547                           tblptrh	equ	0xFF7
  1548                           tblptrl	equ	0xFF6
  1549                           tablat	equ	0xFF5
  1550                           prodh	equ	0xFF4
  1551                           prodl	equ	0xFF3
  1552                           indf0	equ	0xFEF
  1553                           fsr0h	equ	0xFEA
  1554                           fsr0l	equ	0xFE9
  1555                           wreg	equ	0xFE8
  1556                           indf2	equ	0xFDF
  1557                           postinc2	equ	0xFDE
  1558                           postdec2	equ	0xFDD
  1559                           fsr2h	equ	0xFDA
  1560                           fsr2l	equ	0xFD9
  1561                           status	equ	0xFD8
  1562                           
  1563 ;; *************** function _SetDDRamAddr *****************
  1564 ;; Defined at:
  1565 ;;		line 14 in file "setddram.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;  DDaddr          1    wreg     unsigned char 
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;  DDaddr          1    3[COMRAM] unsigned char 
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      void 
  1572 ;; Registers used:
  1573 ;;		wreg, status,2, status,0, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1579 ;;      Params:         0       0       0       0       0       0       0
  1580 ;;      Locals:         1       0       0       0       0       0       0
  1581 ;;      Temps:          3       0       0       0       0       0       0
  1582 ;;      Totals:         4       0       0       0       0       0       0
  1583 ;;Total ram usage:        4 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; Hardware stack levels required when called:    1
  1586 ;; This function calls:
  1587 ;;		_DelayFor18TCY
  1588 ;; This function is called by:
  1589 ;;		_OpenXLCD
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           	psect	text9
  1594  0009DA                     __ptext9:
  1595                           	opt stack 0
  1596  0009DA                     _SetDDRamAddr:
  1597                           	opt stack 27
  1598                           
  1599                           ;incstack = 0
  1600                           ;SetDDRamAddr@DDaddr stored from wreg
  1601  0009DA  6E04               	movwf	SetDDRamAddr@DDaddr,c
  1602                           
  1603                           ;setddram.c: 33: TRISB &= 0xf0;
  1604  0009DC  0EF0               	movlw	240
  1605  0009DE  1693               	andwf	3987,f,c	;volatile
  1606                           
  1607                           ;setddram.c: 34: PORTB &= 0xf0;
  1608  0009E0  0EF0               	movlw	240
  1609  0009E2  1681               	andwf	3969,f,c	;volatile
  1610                           
  1611                           ;setddram.c: 35: PORTB |= (((DDaddr | 0b10000000)>>4) & 0x0f);
  1612  0009E4  5004               	movf	SetDDRamAddr@DDaddr,w,c
  1613  0009E6  6E01               	movwf	??_SetDDRamAddr& (0+255),c
  1614  0009E8  6A02               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  1615  0009EA  8E01               	bsf	??_SetDDRamAddr,7,c
  1616  0009EC  0E04               	movlw	4
  1617  0009EE  6E03               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  1618  0009F0                     u25:
  1619  0009F0  3402               	rlcf	??_SetDDRamAddr+1,w,c
  1620  0009F2  3202               	rrcf	??_SetDDRamAddr+1,f,c
  1621  0009F4  3201               	rrcf	??_SetDDRamAddr,f,c
  1622  0009F6  2E03               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  1623  0009F8  D7FB               	goto	u25
  1624  0009FA  5001               	movf	??_SetDDRamAddr,w,c
  1625  0009FC  0B0F               	andlw	15
  1626  0009FE  1281               	iorwf	3969,f,c	;volatile
  1627                           
  1628                           ;setddram.c: 37: LATAbits.LATA2 = 0;
  1629  000A00  9489               	bcf	3977,2,c	;volatile
  1630                           
  1631                           ;setddram.c: 38: LATAbits.LATA3 = 0;
  1632  000A02  9689               	bcf	3977,3,c	;volatile
  1633                           
  1634                           ;setddram.c: 39: DelayFor18TCY();
  1635  000A04  ECC6  F005         	call	_DelayFor18TCY	;wreg free
  1636                           
  1637                           ;setddram.c: 40: LATAbits.LATA1 = 1;
  1638  000A08  8289               	bsf	3977,1,c	;volatile
  1639                           
  1640                           ;setddram.c: 41: DelayFor18TCY();
  1641  000A0A  ECC6  F005         	call	_DelayFor18TCY	;wreg free
  1642                           
  1643                           ;setddram.c: 42: LATAbits.LATA1 = 0;
  1644  000A0E  9289               	bcf	3977,1,c	;volatile
  1645                           
  1646                           ;setddram.c: 47: PORTB &= 0xf0;
  1647  000A10  0EF0               	movlw	240
  1648  000A12  1681               	andwf	3969,f,c	;volatile
  1649                           
  1650                           ;setddram.c: 48: PORTB |= (DDaddr&0x0f);
  1651  000A14  5004               	movf	SetDDRamAddr@DDaddr,w,c
  1652  000A16  0B0F               	andlw	15
  1653  000A18  1281               	iorwf	3969,f,c	;volatile
  1654                           
  1655                           ;setddram.c: 50: DelayFor18TCY();
  1656  000A1A  ECC6  F005         	call	_DelayFor18TCY	;wreg free
  1657                           
  1658                           ;setddram.c: 51: LATAbits.LATA1 = 1;
  1659  000A1E  8289               	bsf	3977,1,c	;volatile
  1660                           
  1661                           ;setddram.c: 52: DelayFor18TCY();
  1662  000A20  ECC6  F005         	call	_DelayFor18TCY	;wreg free
  1663                           
  1664                           ;setddram.c: 53: LATAbits.LATA1 = 0;
  1665  000A24  9289               	bcf	3977,1,c	;volatile
  1666                           
  1667                           ;setddram.c: 57: TRISB |= 0x0f;
  1668  000A26  0E0F               	movlw	15
  1669  000A28  1293               	iorwf	3987,f,c	;volatile
  1670  000A2A  0012               	return	
  1671  000A2C                     __end_of_SetDDRamAddr:
  1672                           	opt stack 0
  1673                           tblptru	equ	0xFF8
  1674                           tblptrh	equ	0xFF7
  1675                           tblptrl	equ	0xFF6
  1676                           tablat	equ	0xFF5
  1677                           prodh	equ	0xFF4
  1678                           prodl	equ	0xFF3
  1679                           indf0	equ	0xFEF
  1680                           fsr0h	equ	0xFEA
  1681                           fsr0l	equ	0xFE9
  1682                           wreg	equ	0xFE8
  1683                           indf2	equ	0xFDF
  1684                           postinc2	equ	0xFDE
  1685                           postdec2	equ	0xFDD
  1686                           fsr2h	equ	0xFDA
  1687                           fsr2l	equ	0xFD9
  1688                           status	equ	0xFD8
  1689                           
  1690 ;; *************** function _DelayPORXLCD *****************
  1691 ;; Defined at:
  1692 ;;		line 20 in file "main.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;		None
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;		None
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  1    wreg      void 
  1699 ;; Registers used:
  1700 ;;		wreg
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1706 ;;      Params:         0       0       0       0       0       0       0
  1707 ;;      Locals:         0       0       0       0       0       0       0
  1708 ;;      Temps:          1       0       0       0       0       0       0
  1709 ;;      Totals:         1       0       0       0       0       0       0
  1710 ;;Total ram usage:        1 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; This function calls:
  1713 ;;		Nothing
  1714 ;; This function is called by:
  1715 ;;		_OpenXLCD
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           	psect	text10
  1720  000B58                     __ptext10:
  1721                           	opt stack 0
  1722  000B58                     _DelayPORXLCD:
  1723                           	opt stack 28
  1724                           
  1725                           ;main.c: 22: _delay((unsigned long)((15)*(4000000/4000.0)));
  1726                           
  1727                           ;incstack = 0
  1728  000B58  0E14               	movlw	20
  1729  000B5A  6E01               	movwf	??_DelayPORXLCD& (0+255),c
  1730  000B5C  0E7A               	movlw	122
  1731  000B5E                     u1887:
  1732  000B5E  2EE8               	decfsz	wreg,f,c
  1733  000B60  D7FE               	bra	u1887
  1734  000B62  2E01               	decfsz	??_DelayPORXLCD& (0+255),f,c
  1735  000B64  D7FC               	bra	u1887
  1736  000B66  0012               	return		;funcret
  1737  000B68                     __end_of_DelayPORXLCD:
  1738                           	opt stack 0
  1739                           tblptru	equ	0xFF8
  1740                           tblptrh	equ	0xFF7
  1741                           tblptrl	equ	0xFF6
  1742                           tablat	equ	0xFF5
  1743                           prodh	equ	0xFF4
  1744                           prodl	equ	0xFF3
  1745                           indf0	equ	0xFEF
  1746                           fsr0h	equ	0xFEA
  1747                           fsr0l	equ	0xFE9
  1748                           wreg	equ	0xFE8
  1749                           indf2	equ	0xFDF
  1750                           postinc2	equ	0xFDE
  1751                           postdec2	equ	0xFDD
  1752                           fsr2h	equ	0xFDA
  1753                           fsr2l	equ	0xFD9
  1754                           status	equ	0xFD8
  1755                           
  1756 ;; *************** function _Delay10KTCYx *****************
  1757 ;; Defined at:
  1758 ;;		line 8 in file "/opt/microchip/xc8/v1.44/sources/pic18/d10ktcyx.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;  unit            1    wreg     unsigned char 
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;  unit            1    1[COMRAM] unsigned char 
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  1    wreg      void 
  1765 ;; Registers used:
  1766 ;;		wreg
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1772 ;;      Params:         0       0       0       0       0       0       0
  1773 ;;      Locals:         1       0       0       0       0       0       0
  1774 ;;      Temps:          1       0       0       0       0       0       0
  1775 ;;      Totals:         2       0       0       0       0       0       0
  1776 ;;Total ram usage:        2 bytes
  1777 ;; Hardware stack levels used:    1
  1778 ;; This function calls:
  1779 ;;		Nothing
  1780 ;; This function is called by:
  1781 ;;		_OpenXLCD
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text11
  1786  000B42                     __ptext11:
  1787                           	opt stack 0
  1788  000B42                     _Delay10KTCYx:
  1789                           	opt stack 28
  1790                           
  1791                           ;incstack = 0
  1792                           ;Delay10KTCYx@unit stored from wreg
  1793  000B42  6E02               	movwf	Delay10KTCYx@unit,c
  1794  000B44                     l963:
  1795  000B44  0E0D               	movlw	13
  1796  000B46  6E01               	movwf	??_Delay10KTCYx& (0+255),c
  1797  000B48  0EFC               	movlw	252
  1798  000B4A                     u1897:
  1799  000B4A  2EE8               	decfsz	wreg,f,c
  1800  000B4C  D7FE               	bra	u1897
  1801  000B4E  2E01               	decfsz	??_Delay10KTCYx& (0+255),f,c
  1802  000B50  D7FC               	bra	u1897
  1803  000B52  2E02               	decfsz	Delay10KTCYx@unit,f,c
  1804  000B54  D7F7               	goto	l963
  1805  000B56  0012               	return	
  1806  000B58                     __end_of_Delay10KTCYx:
  1807                           	opt stack 0
  1808                           tblptru	equ	0xFF8
  1809                           tblptrh	equ	0xFF7
  1810                           tblptrl	equ	0xFF6
  1811                           tablat	equ	0xFF5
  1812                           prodh	equ	0xFF4
  1813                           prodl	equ	0xFF3
  1814                           indf0	equ	0xFEF
  1815                           fsr0h	equ	0xFEA
  1816                           fsr0l	equ	0xFE9
  1817                           wreg	equ	0xFE8
  1818                           indf2	equ	0xFDF
  1819                           postinc2	equ	0xFDE
  1820                           postdec2	equ	0xFDD
  1821                           fsr2h	equ	0xFDA
  1822                           fsr2l	equ	0xFD9
  1823                           status	equ	0xFD8
  1824                           
  1825 ;; *************** function _BusyXLCD *****************
  1826 ;; Defined at:
  1827 ;;		line 12 in file "busyxlcd.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;		None
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;		None
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      unsigned char 
  1834 ;; Registers used:
  1835 ;;		wreg, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1841 ;;      Params:         0       0       0       0       0       0       0
  1842 ;;      Locals:         0       0       0       0       0       0       0
  1843 ;;      Temps:          0       0       0       0       0       0       0
  1844 ;;      Totals:         0       0       0       0       0       0       0
  1845 ;;Total ram usage:        0 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; Hardware stack levels required when called:    1
  1848 ;; This function calls:
  1849 ;;		_DelayFor18TCY
  1850 ;; This function is called by:
  1851 ;;		_initXLCD
  1852 ;;		_OpenXLCD
  1853 ;;		_putsXLCD
  1854 ;;		_putrsXLCD
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text12
  1859  000AEA                     __ptext12:
  1860                           	opt stack 0
  1861  000AEA                     _BusyXLCD:
  1862                           	opt stack 28
  1863                           
  1864                           ;busyxlcd.c: 14: LATAbits.LATA2 = 1;
  1865                           
  1866                           ;incstack = 0
  1867  000AEA  8489               	bsf	3977,2,c	;volatile
  1868                           
  1869                           ;busyxlcd.c: 15: LATAbits.LATA3 = 0;
  1870  000AEC  9689               	bcf	3977,3,c	;volatile
  1871                           
  1872                           ;busyxlcd.c: 16: DelayFor18TCY();
  1873  000AEE  ECC6  F005         	call	_DelayFor18TCY	;wreg free
  1874                           
  1875                           ;busyxlcd.c: 17: LATAbits.LATA1 = 1;
  1876  000AF2  8289               	bsf	3977,1,c	;volatile
  1877                           
  1878                           ;busyxlcd.c: 18: DelayFor18TCY();
  1879  000AF4  ECC6  F005         	call	_DelayFor18TCY	;wreg free
  1880                           
  1881                           ;busyxlcd.c: 36: if(PORTB&0x08)
  1882  000AF8  A681               	btfss	3969,3,c	;volatile
  1883  000AFA  D00A               	goto	l9
  1884                           
  1885                           ;busyxlcd.c: 38: {
  1886                           ;busyxlcd.c: 39: LATAbits.LATA1 = 0;
  1887  000AFC  9289               	bcf	3977,1,c	;volatile
  1888                           
  1889                           ;busyxlcd.c: 40: DelayFor18TCY();
  1890  000AFE  ECC6  F005         	call	_DelayFor18TCY	;wreg free
  1891                           
  1892                           ;busyxlcd.c: 41: LATAbits.LATA1 = 1;
  1893  000B02  8289               	bsf	3977,1,c	;volatile
  1894                           
  1895                           ;busyxlcd.c: 42: DelayFor18TCY();
  1896  000B04  ECC6  F005         	call	_DelayFor18TCY	;wreg free
  1897                           
  1898                           ;busyxlcd.c: 43: LATAbits.LATA1 = 0;
  1899  000B08  9289               	bcf	3977,1,c	;volatile
  1900                           
  1901                           ;busyxlcd.c: 44: LATAbits.LATA2 = 0;
  1902  000B0A  9489               	bcf	3977,2,c	;volatile
  1903                           
  1904                           ;busyxlcd.c: 45: return 1;
  1905  000B0C  0E01               	movlw	1
  1906                           
  1907                           ;busyxlcd.c: 46: }
  1908  000B0E  0012               	return	
  1909  000B10                     l9:
  1910                           
  1911                           ;busyxlcd.c: 47: else
  1912                           ;busyxlcd.c: 48: {
  1913                           ;busyxlcd.c: 49: LATAbits.LATA1 = 0;
  1914  000B10  9289               	bcf	3977,1,c	;volatile
  1915                           
  1916                           ;busyxlcd.c: 50: DelayFor18TCY();
  1917  000B12  ECC6  F005         	call	_DelayFor18TCY	;wreg free
  1918                           
  1919                           ;busyxlcd.c: 51: LATAbits.LATA1 = 1;
  1920  000B16  8289               	bsf	3977,1,c	;volatile
  1921                           
  1922                           ;busyxlcd.c: 52: DelayFor18TCY();
  1923  000B18  ECC6  F005         	call	_DelayFor18TCY	;wreg free
  1924                           
  1925                           ;busyxlcd.c: 53: LATAbits.LATA1 = 0;
  1926  000B1C  9289               	bcf	3977,1,c	;volatile
  1927                           
  1928                           ;busyxlcd.c: 54: LATAbits.LATA2 = 0;
  1929  000B1E  9489               	bcf	3977,2,c	;volatile
  1930                           
  1931                           ;busyxlcd.c: 55: return 0;
  1932  000B20  0E00               	movlw	0
  1933  000B22  0012               	return	
  1934  000B24                     __end_of_BusyXLCD:
  1935                           	opt stack 0
  1936                           tblptru	equ	0xFF8
  1937                           tblptrh	equ	0xFF7
  1938                           tblptrl	equ	0xFF6
  1939                           tablat	equ	0xFF5
  1940                           prodh	equ	0xFF4
  1941                           prodl	equ	0xFF3
  1942                           indf0	equ	0xFEF
  1943                           fsr0h	equ	0xFEA
  1944                           fsr0l	equ	0xFE9
  1945                           wreg	equ	0xFE8
  1946                           indf2	equ	0xFDF
  1947                           postinc2	equ	0xFDE
  1948                           postdec2	equ	0xFDD
  1949                           fsr2h	equ	0xFDA
  1950                           fsr2l	equ	0xFD9
  1951                           status	equ	0xFD8
  1952                           
  1953 ;; *************** function _DelayFor18TCY *****************
  1954 ;; Defined at:
  1955 ;;		line 15 in file "main.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;		None
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;		None
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1969 ;;      Params:         0       0       0       0       0       0       0
  1970 ;;      Locals:         0       0       0       0       0       0       0
  1971 ;;      Temps:          0       0       0       0       0       0       0
  1972 ;;      Totals:         0       0       0       0       0       0       0
  1973 ;;Total ram usage:        0 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; This function calls:
  1976 ;;		Nothing
  1977 ;; This function is called by:
  1978 ;;		_BusyXLCD
  1979 ;;		_SetDDRamAddr
  1980 ;;		_WriteCmdXLCD
  1981 ;;		_WriteDataXLCD
  1982 ;;		_ReadAddrXLCD
  1983 ;;		_ReadDataXLCD
  1984 ;;		_SetCGRamAddr
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text13
  1989  000B8C                     __ptext13:
  1990                           	opt stack 0
  1991  000B8C                     _DelayFor18TCY:
  1992                           	opt stack 28
  1993                           
  1994                           ;main.c: 17: _delay((unsigned long)((20)*(4000000/4000000.0)));
  1995                           
  1996                           ;incstack = 0
  1997  000B8C  0E06               	movlw	6
  1998  000B8E                     u1907:
  1999  000B8E  2EE8               	decfsz	wreg,f,c
  2000  000B90  D7FE               	bra	u1907
  2001  000B92  D000               	nop2	
  2002  000B94  0012               	return		;funcret
  2003  000B96                     __end_of_DelayFor18TCY:
  2004                           	opt stack 0
  2005                           tblptru	equ	0xFF8
  2006                           tblptrh	equ	0xFF7
  2007                           tblptrl	equ	0xFF6
  2008                           tablat	equ	0xFF5
  2009                           prodh	equ	0xFF4
  2010                           prodl	equ	0xFF3
  2011                           indf0	equ	0xFEF
  2012                           fsr0h	equ	0xFEA
  2013                           fsr0l	equ	0xFE9
  2014                           wreg	equ	0xFE8
  2015                           indf2	equ	0xFDF
  2016                           postinc2	equ	0xFDE
  2017                           postdec2	equ	0xFDD
  2018                           fsr2h	equ	0xFDA
  2019                           fsr2l	equ	0xFD9
  2020                           status	equ	0xFD8
  2021                           
  2022 ;; *************** function _ReadADC *****************
  2023 ;; Defined at:
  2024 ;;		line 24 in file "adcread.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;		None
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;		None
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  2    0[COMRAM] int 
  2031 ;; Registers used:
  2032 ;;		wreg, status,2
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2038 ;;      Params:         2       0       0       0       0       0       0
  2039 ;;      Locals:         0       0       0       0       0       0       0
  2040 ;;      Temps:          2       0       0       0       0       0       0
  2041 ;;      Totals:         4       0       0       0       0       0       0
  2042 ;;Total ram usage:        4 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; This function calls:
  2045 ;;		Nothing
  2046 ;; This function is called by:
  2047 ;;		_main
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           	psect	text14
  2052  000B68                     __ptext14:
  2053                           	opt stack 0
  2054  000B68                     _ReadADC:
  2055                           	opt stack 30
  2056                           
  2057                           ;adcread.c: 26: return (((unsigned int)ADRESH)<<8)|(ADRESL);
  2058                           
  2059                           ;incstack = 0
  2060  000B68  50C4               	movf	4036,w,c	;volatile
  2061  000B6A  6E03               	movwf	??_ReadADC& (0+255),c
  2062  000B6C  50C3               	movf	4035,w,c	;volatile
  2063  000B6E  6E01               	movwf	?_ReadADC,c
  2064  000B70  C003  F002         	movff	??_ReadADC,?_ReadADC+1
  2065  000B74  0012               	return	
  2066  000B76                     __end_of_ReadADC:
  2067                           	opt stack 0
  2068                           tblptru	equ	0xFF8
  2069                           tblptrh	equ	0xFF7
  2070                           tblptrl	equ	0xFF6
  2071                           tablat	equ	0xFF5
  2072                           prodh	equ	0xFF4
  2073                           prodl	equ	0xFF3
  2074                           indf0	equ	0xFEF
  2075                           fsr0h	equ	0xFEA
  2076                           fsr0l	equ	0xFE9
  2077                           wreg	equ	0xFE8
  2078                           indf2	equ	0xFDF
  2079                           postinc2	equ	0xFDE
  2080                           postdec2	equ	0xFDD
  2081                           fsr2h	equ	0xFDA
  2082                           fsr2l	equ	0xFD9
  2083                           status	equ	0xFD8
  2084                           
  2085 ;; *************** function _OpenADC *****************
  2086 ;; Defined at:
  2087 ;;		line 68 in file "adcopen.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  config          1    wreg     unsigned char 
  2090 ;;  config2         1    0[COMRAM] unsigned char 
  2091 ;;  portconfig      1    1[COMRAM] unsigned char 
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;  config          1    4[COMRAM] unsigned char 
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      void 
  2096 ;; Registers used:
  2097 ;;		wreg, status,2, status,0
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2103 ;;      Params:         2       0       0       0       0       0       0
  2104 ;;      Locals:         1       0       0       0       0       0       0
  2105 ;;      Temps:          2       0       0       0       0       0       0
  2106 ;;      Totals:         5       0       0       0       0       0       0
  2107 ;;Total ram usage:        5 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; This function calls:
  2110 ;;		Nothing
  2111 ;; This function is called by:
  2112 ;;		_main
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           	psect	text15
  2117  0008CE                     __ptext15:
  2118                           	opt stack 0
  2119  0008CE                     _OpenADC:
  2120                           	opt stack 30
  2121                           
  2122                           ;incstack = 0
  2123                           ;OpenADC@config stored from wreg
  2124  0008CE  6E05               	movwf	OpenADC@config,c
  2125                           
  2126                           ;adcopen.c: 72: ADCON0 = 0;
  2127  0008D0  0E00               	movlw	0
  2128  0008D2  6EC2               	movwf	4034,c	;volatile
  2129                           
  2130                           ;adcopen.c: 73: ADCON2 = 0;
  2131  0008D4  0E00               	movlw	0
  2132  0008D6  6EC0               	movwf	4032,c	;volatile
  2133                           
  2134                           ;adcopen.c: 75: ADCON0 = (config2 >> 1) & 0b00111100;
  2135  0008D8  90D8               	bcf	status,0,c
  2136  0008DA  3001               	rrcf	OpenADC@config2,w,c
  2137  0008DC  0B3C               	andlw	60
  2138  0008DE  6EC2               	movwf	4034,c	;volatile
  2139                           
  2140                           ;adcopen.c: 76: ADCON1 = (portconfig & 0b00001111) |
  2141                           ;adcopen.c: 77: ((config2 << 4) & 0b00110000);
  2142  0008E0  C001  F003         	movff	OpenADC@config2,??_OpenADC
  2143  0008E4  3A03               	swapf	??_OpenADC,f,c
  2144  0008E6  0EF0               	movlw	240
  2145  0008E8  1603               	andwf	??_OpenADC,f,c
  2146  0008EA  0E30               	movlw	48
  2147  0008EC  1603               	andwf	??_OpenADC,f,c
  2148  0008EE  5002               	movf	OpenADC@portconfig,w,c
  2149  0008F0  0B0F               	andlw	15
  2150  0008F2  1003               	iorwf	??_OpenADC,w,c
  2151  0008F4  6EC1               	movwf	4033,c	;volatile
  2152                           
  2153                           ;adcopen.c: 78: ADCON2 = (config & 0b10000000) |
  2154                           ;adcopen.c: 79: ((config >> 4) & 0b00000111) |
  2155                           ;adcopen.c: 80: ((config << 2) & 0b00111000);
  2156  0008F6  C005  F003         	movff	OpenADC@config,??_OpenADC
  2157  0008FA  90D8               	bcf	status,0,c
  2158  0008FC  3603               	rlcf	??_OpenADC,f,c
  2159  0008FE  90D8               	bcf	status,0,c
  2160  000900  3603               	rlcf	??_OpenADC,f,c
  2161  000902  0E38               	movlw	56
  2162  000904  1603               	andwf	??_OpenADC,f,c
  2163  000906  C005  F004         	movff	OpenADC@config,??_OpenADC+1
  2164  00090A  3A04               	swapf	??_OpenADC+1,f,c
  2165  00090C  0E0F               	movlw	15
  2166  00090E  1604               	andwf	??_OpenADC+1,f,c
  2167  000910  0E07               	movlw	7
  2168  000912  1604               	andwf	??_OpenADC+1,f,c
  2169  000914  5005               	movf	OpenADC@config,w,c
  2170  000916  0B80               	andlw	128
  2171  000918  1004               	iorwf	??_OpenADC+1,w,c
  2172  00091A  1003               	iorwf	??_OpenADC,w,c
  2173  00091C  6EC0               	movwf	4032,c	;volatile
  2174                           
  2175                           ;adcopen.c: 82: if( config2 & 0b10000000 )
  2176  00091E  AE01               	btfss	OpenADC@config2,7,c
  2177  000920  D003               	goto	l229
  2178                           
  2179                           ;adcopen.c: 83: {
  2180                           ;adcopen.c: 84: PIR1bits.ADIF = 0;
  2181  000922  9C9E               	bcf	3998,6,c	;volatile
  2182                           
  2183                           ;adcopen.c: 85: PIE1bits.ADIE = 1;
  2184  000924  8C9D               	bsf	3997,6,c	;volatile
  2185                           
  2186                           ;adcopen.c: 86: INTCONbits.PEIE = 1;
  2187  000926  8CF2               	bsf	intcon,6,c	;volatile
  2188  000928                     l229:
  2189                           
  2190                           ;adcopen.c: 87: }
  2191                           ;adcopen.c: 88: ADCON0bits.ADON = 1;
  2192  000928  80C2               	bsf	4034,0,c	;volatile
  2193  00092A  0012               	return		;funcret
  2194  00092C                     __end_of_OpenADC:
  2195                           	opt stack 0
  2196                           tblptru	equ	0xFF8
  2197                           tblptrh	equ	0xFF7
  2198                           tblptrl	equ	0xFF6
  2199                           tablat	equ	0xFF5
  2200                           prodh	equ	0xFF4
  2201                           prodl	equ	0xFF3
  2202                           intcon	equ	0xFF2
  2203                           indf0	equ	0xFEF
  2204                           fsr0h	equ	0xFEA
  2205                           fsr0l	equ	0xFE9
  2206                           wreg	equ	0xFE8
  2207                           indf2	equ	0xFDF
  2208                           postinc2	equ	0xFDE
  2209                           postdec2	equ	0xFDD
  2210                           fsr2h	equ	0xFDA
  2211                           fsr2l	equ	0xFD9
  2212                           status	equ	0xFD8
  2213                           
  2214 ;; *************** function _ConvertADC *****************
  2215 ;; Defined at:
  2216 ;;		line 22 in file "adcconv.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;		None
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;		None
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      void 
  2223 ;; Registers used:
  2224 ;;		None
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2230 ;;      Params:         0       0       0       0       0       0       0
  2231 ;;      Locals:         0       0       0       0       0       0       0
  2232 ;;      Temps:          0       0       0       0       0       0       0
  2233 ;;      Totals:         0       0       0       0       0       0       0
  2234 ;;Total ram usage:        0 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; This function calls:
  2237 ;;		Nothing
  2238 ;; This function is called by:
  2239 ;;		_main
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text16
  2244  000B9C                     __ptext16:
  2245                           	opt stack 0
  2246  000B9C                     _ConvertADC:
  2247                           	opt stack 30
  2248                           
  2249                           ;adcconv.c: 24: ADCON0bits.GO = 1;
  2250                           
  2251                           ;incstack = 0
  2252  000B9C  82C2               	bsf	4034,1,c	;volatile
  2253  000B9E  0012               	return		;funcret
  2254  000BA0                     __end_of_ConvertADC:
  2255                           	opt stack 0
  2256                           tblptru	equ	0xFF8
  2257                           tblptrh	equ	0xFF7
  2258                           tblptrl	equ	0xFF6
  2259                           tablat	equ	0xFF5
  2260                           prodh	equ	0xFF4
  2261                           prodl	equ	0xFF3
  2262                           intcon	equ	0xFF2
  2263                           indf0	equ	0xFEF
  2264                           fsr0h	equ	0xFEA
  2265                           fsr0l	equ	0xFE9
  2266                           wreg	equ	0xFE8
  2267                           indf2	equ	0xFDF
  2268                           postinc2	equ	0xFDE
  2269                           postdec2	equ	0xFDD
  2270                           fsr2h	equ	0xFDA
  2271                           fsr2l	equ	0xFD9
  2272                           status	equ	0xFD8
  2273                           
  2274 ;; *************** function _CloseADC *****************
  2275 ;; Defined at:
  2276 ;;		line 23 in file "adcclose.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;		None
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;		None
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		None
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2290 ;;      Params:         0       0       0       0       0       0       0
  2291 ;;      Locals:         0       0       0       0       0       0       0
  2292 ;;      Temps:          0       0       0       0       0       0       0
  2293 ;;      Totals:         0       0       0       0       0       0       0
  2294 ;;Total ram usage:        0 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; This function calls:
  2297 ;;		Nothing
  2298 ;; This function is called by:
  2299 ;;		_main
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text17
  2304  000B96                     __ptext17:
  2305                           	opt stack 0
  2306  000B96                     _CloseADC:
  2307                           	opt stack 30
  2308                           
  2309                           ;adcclose.c: 25: ADCON0bits.ADON = 0;
  2310                           
  2311                           ;incstack = 0
  2312  000B96  90C2               	bcf	4034,0,c	;volatile
  2313                           
  2314                           ;adcclose.c: 26: PIE1bits.ADIE = 0;
  2315  000B98  9C9D               	bcf	3997,6,c	;volatile
  2316  000B9A  0012               	return		;funcret
  2317  000B9C                     __end_of_CloseADC:
  2318                           	opt stack 0
  2319                           tblptru	equ	0xFF8
  2320                           tblptrh	equ	0xFF7
  2321                           tblptrl	equ	0xFF6
  2322                           tablat	equ	0xFF5
  2323                           prodh	equ	0xFF4
  2324                           prodl	equ	0xFF3
  2325                           intcon	equ	0xFF2
  2326                           indf0	equ	0xFEF
  2327                           fsr0h	equ	0xFEA
  2328                           fsr0l	equ	0xFE9
  2329                           wreg	equ	0xFE8
  2330                           indf2	equ	0xFDF
  2331                           postinc2	equ	0xFDE
  2332                           postdec2	equ	0xFDD
  2333                           fsr2h	equ	0xFDA
  2334                           fsr2l	equ	0xFD9
  2335                           status	equ	0xFD8
  2336                           
  2337 ;; *************** function _BusyADC *****************
  2338 ;; Defined at:
  2339 ;;		line 26 in file "adcbusy.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;		None
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;		None
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      unsigned char 
  2346 ;; Registers used:
  2347 ;;		wreg
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2353 ;;      Params:         0       0       0       0       0       0       0
  2354 ;;      Locals:         0       0       0       0       0       0       0
  2355 ;;      Temps:          0       0       0       0       0       0       0
  2356 ;;      Totals:         0       0       0       0       0       0       0
  2357 ;;Total ram usage:        0 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; This function calls:
  2360 ;;		Nothing
  2361 ;; This function is called by:
  2362 ;;		_main
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           	psect	text18
  2367  000B76                     __ptext18:
  2368                           	opt stack 0
  2369  000B76                     _BusyADC:
  2370                           	opt stack 30
  2371                           
  2372                           ;adcbusy.c: 28: return(ADCON0bits.GO);
  2373                           
  2374                           ;incstack = 0
  2375  000B76  A2C2               	btfss	4034,1,c	;volatile
  2376  000B78  D002               	goto	u180
  2377  000B7A  0E01               	movlw	1
  2378  000B7C  0012               	return	
  2379  000B7E                     u180:
  2380  000B7E  0E00               	movlw	0
  2381  000B80  0012               	return	
  2382  000B82                     __end_of_BusyADC:
  2383                           	opt stack 0
  2384                           tblptru	equ	0xFF8
  2385                           tblptrh	equ	0xFF7
  2386                           tblptrl	equ	0xFF6
  2387                           tablat	equ	0xFF5
  2388                           prodh	equ	0xFF4
  2389                           prodl	equ	0xFF3
  2390                           intcon	equ	0xFF2
  2391                           indf0	equ	0xFEF
  2392                           fsr0h	equ	0xFEA
  2393                           fsr0l	equ	0xFE9
  2394                           wreg	equ	0xFE8
  2395                           indf2	equ	0xFDF
  2396                           postinc2	equ	0xFDE
  2397                           postdec2	equ	0xFDD
  2398                           fsr2h	equ	0xFDA
  2399                           fsr2l	equ	0xFD9
  2400                           status	equ	0xFD8
  2401                           tblptru	equ	0xFF8
  2402                           tblptrh	equ	0xFF7
  2403                           tblptrl	equ	0xFF6
  2404                           tablat	equ	0xFF5
  2405                           prodh	equ	0xFF4
  2406                           prodl	equ	0xFF3
  2407                           intcon	equ	0xFF2
  2408                           indf0	equ	0xFEF
  2409                           fsr0h	equ	0xFEA
  2410                           fsr0l	equ	0xFE9
  2411                           wreg	equ	0xFE8
  2412                           indf2	equ	0xFDF
  2413                           postinc2	equ	0xFDE
  2414                           postdec2	equ	0xFDD
  2415                           fsr2h	equ	0xFDA
  2416                           fsr2l	equ	0xFD9
  2417                           status	equ	0xFD8
  2418                           
  2419                           	psect	rparam
  2420  0000                     tblptru	equ	0xFF8
  2421                           tblptrh	equ	0xFF7
  2422                           tblptrl	equ	0xFF6
  2423                           tablat	equ	0xFF5
  2424                           prodh	equ	0xFF4
  2425                           prodl	equ	0xFF3
  2426                           intcon	equ	0xFF2
  2427                           indf0	equ	0xFEF
  2428                           fsr0h	equ	0xFEA
  2429                           fsr0l	equ	0xFE9
  2430                           wreg	equ	0xFE8
  2431                           indf2	equ	0xFDF
  2432                           postinc2	equ	0xFDE
  2433                           postdec2	equ	0xFDD
  2434                           fsr2h	equ	0xFDA
  2435                           fsr2l	equ	0xFD9
  2436                           status	equ	0xFD8


Data Sizes:
    Strings     8
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     56      56
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> main@str_tmp(COMRAM[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[5]), main@str_tmp(COMRAM[20]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _putsXLCD->_WriteDataXLCD
    _initXLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0    2059
                                             26 COMRAM    30    30      0
                            _BusyADC
                           _CloseADC
                         _ConvertADC
                            _OpenADC
                            _ReadADC
                           _initXLCD
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    17      6    1254
                                             12 COMRAM    14     8      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _putsXLCD                                             2     0      2     227
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      30
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _initXLCD                                             0     0      0     120
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0      90
                                              4 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      30
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      30
                                              0 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     306
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CloseADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _CloseADC
   _ConvertADC
   _OpenADC
   _ReadADC
   _initXLCD
     _BusyXLCD
       _DelayFor18TCY
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _Delay10KTCYx
       _DelayPORXLCD
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _putsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     38      38       1       44.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Oct 24 09:46:17 2017

                      l9 0B10              _SSPSTATbits 000FC7                       l52 0B2A  
                     l61 07AA                       l59 07A6                       l93 087C  
                     l87 0862                       l96 088C                       l99 089C  
                     u30 086C                       u25 09F0              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_OSC$XT 000000                      l102 08AC  
                    l105 08BC                      l127 0960                      l128 092E  
                    l229 0928                      l750 0662                      l743 061E  
                    l752 068A                      l744 0638                      l756 06D6  
                    l757 072E                      l758 06DC                      l963 0B44  
           __CFG_CPB$OFF 000000                      u180 0B7E             __CFG_CPD$OFF 000000  
  __size_of_WriteCmdXLCD 003E                      wreg 000FE8              main@channel 0031  
           __CFG_LVP$OFF 000000              main@config1 0036              main@config2 0037  
            main@config3 0032             __CFG_WDT$OFF 000000                     l2210 068E  
                   l1172 09A6                     l1173 099E                     l1182 0A42  
                   l1183 0A3A                     l1176 09C6                     l1177 09D0  
                   l1186 0A5A                     l1187 0A64                     STR_1 0610  
                   STR_2 060B                     _LATA 000F89                     _LATB 000F8A  
                   u1810 0958                     u1820 0980                     u1660 09AA  
                   u1760 06BA                     u1817 094E                     u1690 0A46  
                   u1907 0B8E                     u1827 0976                     u1780 0736  
                   u1790 074E                     u1857 0762                     u1867 07F2  
                   u1877 0818                     u1887 0B5E                     u1897 0B4A  
                   _main 075C                     fsr0h 000FEA                     indf0 000FEF  
                   fsr2h 000FDA                     fsr0l 000FE9                     indf2 000FDF  
                   fsr2l 000FD9   __size_of_WriteDataXLCD 003E                     prodh 000FF4  
                   prodl 000FF3                     start 0000            __CFG_IESO$OFF 000000  
            main@str_tmp 001D            __CFG_MCLRE$ON 000000             ___param_bank 000000  
        __end_of_BusyADC 0B82          __end_of_ReadADC 0B76          __end_of_OpenADC 092C  
           _WriteCmdXLCD 0AAC            ?_SetDDRamAddr 0001                    ?_main 0001  
        __end_of___lwdiv 09DA          __end_of___lwmod 0A6E                    _PORTB 000F81  
                  _TRISB 000F93    __size_of_Delay10KTCYx 0016            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000          __end_of_dpowers 060B                    main@i 0033  
             _ConvertADC 0B9C           __CFG_BOREN$OFF 000000                    tablat 000FF5  
                  status 000FD8          __end_of_sprintf 075C         __end_of_CloseADC 0B9C  
        __initialization 0B82             __end_of_main 082A         __end_of_BusyXLCD 0B24  
           _Delay10KTCYx 0B42    __size_of_DelayPORXLCD 0010           ??_SetDDRamAddr 0001  
       __end_of_OpenXLCD 08CE                   ??_main 001B            __activetblptr 000002  
          _WriteDataXLCD 0A6E                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _SSPBUF 000FC9                ??_BusyADC 0001                ??_ReadADC 0003  
              ??_OpenADC 0003             _DelayPORXLCD 0B58           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000         __end_of_initXLCD 0B42                ??___lwdiv 0005  
              ??___lwmod 000C           ?_WriteDataXLCD 0001             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
       __end_of_putsXLCD 0988                ??_sprintf 0013              ?_ConvertADC 0001  
             __accesstop 0080  __end_of__initialization 0B82          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001                ?_CloseADC 0001  
 __size_of_DelayFor18TCY 000A                ?_BusyXLCD 0001          WriteCmdXLCD@cmd 0001  
   __end_of_SetDDRamAddr 0A2C                ?_OpenXLCD 0001        WriteDataXLCD@data 0001  
        ??_WriteDataXLCD 0001      __size_of_ConvertADC 0004               ??_CloseADC 0001  
                _SSPCON1 000FC6                  _SSPCON2 000FC5                  _SSPSTAT 000FC7  
             ??_BusyXLCD 0001                ?_initXLCD 0001                  _BusyADC 0B76  
                _ReadADC 0B68               ??_OpenXLCD 0005                  _OpenADC 08CE  
                __Hparam 0000                  __Lparam 0000            _DelayFor18TCY 0B8C  
              ?_putsXLCD 0002                  ___lwdiv 0988                  ___lwmod 0A2C  
           __psmallconst 0600                  __pcinit 0B82                  __ramtop 0600  
                __ptext0 075C                  __ptext1 0614                  __ptext2 0A2C  
                __ptext3 0988                  __ptext4 092C                  __ptext5 0A6E  
                __ptext6 0B24                  __ptext7 082A                  __ptext8 0AAC  
                __ptext9 09DA                  _dpowers 0601           OpenADC@config2 0001  
                _sprintf 0614                  main@tmp 0034     end_of_initialization 0B82  
             ??_initXLCD 0006            __Lmediumconst 0000           main@portconfig 0038  
         ?_DelayFor18TCY 0001                  postdec2 000FDD                  postinc2 000FDE  
             ??_putsXLCD 0004                _TRISAbits 000F92                _TRISCbits 000F94  
  __size_of_SetDDRamAddr 0052             ??_ConvertADC 0001       __end_of_ConvertADC 0BA0  
           _SetDDRamAddr 09DA       SetDDRamAddr@DDaddr 0004      start_initialization 0B82  
      __size_of_CloseADC 0006        __size_of_BusyXLCD 003A          ??_DelayFor18TCY 0001  
      __size_of_OpenXLCD 00A4            ?_WriteCmdXLCD 0001         __CFG_LPT1OSC$OFF 000000  
            sprintf@flag 0016              sprintf@prec 0017                 ?_BusyADC 0001  
               ?_ReadADC 0001        __size_of_initXLCD 001E        OpenADC@portconfig 0002  
               ?_OpenADC 0001           putsXLCD@buffer 0002         ___lwdiv@dividend 0001  
      __CFG_CCP2MX$PORTC 000000           ??_WriteCmdXLCD 0001            ?_Delay10KTCYx 0001  
               ?___lwdiv 0001                 ?___lwmod 0008        __size_of_putsXLCD 005C  
  __end_of_WriteDataXLCD 0AAC              __smallconst 0600         ___lwdiv@quotient 0005  
               ?_sprintf 000D            OpenADC@config 0005                 _LATAbits 000F89  
               _PIE1bits 000F9D            ?_DelayPORXLCD 0001                 _PIR1bits 000F9E  
        OpenXLCD@lcdtype 0005                 _PIR2bits 000FA1         __CFG_WDTPS$32768 000000  
         ??_Delay10KTCYx 0001               _ADCON0bits 000FC2         Delay10KTCYx@unit 0002  
               _CloseADC 0B96                 _BusyXLCD 0AEA           ??_DelayPORXLCD 0001  
               _OpenXLCD 082A         __size_of_BusyADC 000C         __size_of_ReadADC 000E  
               __Hrparam 0000         __size_of_OpenADC 005E                 __Lrparam 0000  
       __size_of___lwdiv 0052         __size_of___lwmod 0042               sprintf@val 0018  
        ___lwdiv@divisor 0003          ___lwdiv@counter 0007                 __ptext10 0B58  
               __ptext11 0B42                 __ptext12 0AEA                 __ptext13 0B8C  
               __ptext14 0B68                 __ptext15 08CE                 __ptext16 0B9C  
               __ptext17 0B96                 __ptext18 0B76     __end_of_WriteCmdXLCD 0AEA  
       __size_of_sprintf 0148                 _initXLCD 0B24            __size_of_main 00CE  
               _putsXLCD 092C               _INTCONbits 000FF2     __end_of_Delay10KTCYx 0B58  
              sprintf@ap 0014                sprintf@sp 000D         ___lwmod@dividend 0008  
  __end_of_DelayFor18TCY 0B96                 sprintf@c 001A                 sprintf@f 000F  
   __end_of_DelayPORXLCD 0B68          ___lwmod@divisor 000A          ___lwmod@counter 000C  
            _SSPCON1bits 000FC6              _SSPCON2bits 000FC5  
